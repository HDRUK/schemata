{
      "$id": "http://supermodel.io/schemaorg/Dataset",
      "$schema": "http://json-schema.org/draft-07/schema#",
      "$source": "http://schema.org/Dataset",
      "title": "Dataset",
      "type": "object",
      "description": "A body of structured information describing some topic(s) of interest.",
      "allOf": [
            {
                  "$ref": "http://supermodel.io/schemaorg/CreativeWork"
            }
      ],
      "properties": {
            "includedInDataCatalog": {
                  "$ref": "http://supermodel.io/schemaorg/properties/includedInDataCatalog"
            },
            "datasetTimeInterval": {
                  "$ref": "http://supermodel.io/schemaorg/properties/datasetTimeInterval"
            },
            "issn": {
                  "$ref": "http://supermodel.io/schemaorg/properties/issn"
            },
            "spatial": {
                  "$ref": "http://supermodel.io/schemaorg/properties/spatial"
            },
            "temporal": {
                  "$ref": "http://supermodel.io/schemaorg/properties/temporal"
            },
            "catalog": {
                  "$ref": "http://supermodel.io/schemaorg/properties/catalog"
            },
            "includedDataCatalog": {
                  "$ref": "http://supermodel.io/schemaorg/properties/includedDataCatalog"
            },
            "distribution": {
                  "$ref": "http://supermodel.io/schemaorg/properties/distribution"
            }
      },
      "required": [
            "description","name","alternateName","creator",
            "citation","funder","identifier","isAccessibleForFree",
            "keywords","license","spacialCoverage",
            "temporalCoverage","version","url"      
      ],
      "definitions": {
            "http://supermodel.io/schemaorg/properties/includedInDataCatalog": {
                  "$id": "http://supermodel.io/schemaorg/properties/includedInDataCatalog",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/includedInDataCatalog",
                  "title": "includedInDataCatalog",
                  "description": "A data catalog which contains this dataset.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataCatalog"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/DataCatalog": {
                  "$id": "http://supermodel.io/schemaorg/DataCatalog",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/DataCatalog",
                  "title": "DataCatalog",
                  "type": "object",
                  "description": "A collection of datasets.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "dataset": {
                              "$ref": "http://supermodel.io/schemaorg/properties/dataset"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/dataset": {
                  "$id": "http://supermodel.io/schemaorg/properties/dataset",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/dataset",
                  "title": "dataset",
                  "description": "A dataset contained in this catalog.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Dataset"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/CreativeWork": {
                  "$id": "http://supermodel.io/schemaorg/CreativeWork",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/CreativeWork",
                  "title": "CreativeWork",
                  "type": "object",
                  "description": "The most generic kind of creative work, including books, movies, photographs, software programs, etc.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ],
                  "properties": {
                        "about": {
                              "$ref": "http://supermodel.io/schemaorg/properties/about"
                        },
                        "accessibilitySummary": {
                              "$ref": "http://supermodel.io/schemaorg/properties/accessibilitySummary"
                        },
                        "educationalAlignment": {
                              "$ref": "http://supermodel.io/schemaorg/properties/educationalAlignment"
                        },
                        "associatedMedia": {
                              "$ref": "http://supermodel.io/schemaorg/properties/associatedMedia"
                        },
                        "funder": {
                              "$ref": "http://supermodel.io/schemaorg/properties/funder"
                        },
                        "position": {
                              "$ref": "http://supermodel.io/schemaorg/properties/position"
                        },
                        "sponsor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/sponsor"
                        },
                        "audio": {
                              "$ref": "http://supermodel.io/schemaorg/properties/audio"
                        },
                        "workExample": {
                              "$ref": "http://supermodel.io/schemaorg/properties/workExample"
                        },
                        "provider": {
                              "$ref": "http://supermodel.io/schemaorg/properties/provider"
                        },
                        "encoding": {
                              "$ref": "http://supermodel.io/schemaorg/properties/encoding"
                        },
                        "interactivityType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/interactivityType"
                        },
                        "character": {
                              "$ref": "http://supermodel.io/schemaorg/properties/character"
                        },
                        "audience": {
                              "$ref": "http://supermodel.io/schemaorg/properties/audience"
                        },
                        "sourceOrganization": {
                              "$ref": "http://supermodel.io/schemaorg/properties/sourceOrganization"
                        },
                        "isPartOf": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isPartOf"
                        },
                        "video": {
                              "$ref": "http://supermodel.io/schemaorg/properties/video"
                        },
                        "publication": {
                              "$ref": "http://supermodel.io/schemaorg/properties/publication"
                        },
                        "text": {
                              "$ref": "http://supermodel.io/schemaorg/properties/text"
                        },
                        "expires": {
                              "$ref": "http://supermodel.io/schemaorg/properties/expires"
                        },
                        "contributor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contributor"
                        },
                        "publisher": {
                              "$ref": "http://supermodel.io/schemaorg/properties/publisher"
                        },
                        "reviews": {
                              "$ref": "http://supermodel.io/schemaorg/properties/reviews"
                        },
                        "typicalAgeRange": {
                              "$ref": "http://supermodel.io/schemaorg/properties/typicalAgeRange"
                        },
                        "releasedEvent": {
                              "$ref": "http://supermodel.io/schemaorg/properties/releasedEvent"
                        },
                        "educationalUse": {
                              "$ref": "http://supermodel.io/schemaorg/properties/educationalUse"
                        },
                        "contentLocation": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contentLocation"
                        },
                        "schemaVersion": {
                              "$ref": "http://supermodel.io/schemaorg/properties/schemaVersion"
                        },
                        "accessibilityFeature": {
                              "$ref": "http://supermodel.io/schemaorg/properties/accessibilityFeature"
                        },
                        "aggregateRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating"
                        },
                        "locationCreated": {
                              "$ref": "http://supermodel.io/schemaorg/properties/locationCreated"
                        },
                        "accessModeSufficient": {
                              "$ref": "http://supermodel.io/schemaorg/properties/accessModeSufficient"
                        },
                        "temporalCoverage": {
                              "$ref": "http://supermodel.io/schemaorg/properties/temporalCoverage"
                        },
                        "accountablePerson": {
                              "$ref": "http://supermodel.io/schemaorg/properties/accountablePerson"
                        },
                        "spatialCoverage": {
                              "$ref": "http://supermodel.io/schemaorg/properties/spatialCoverage"
                        },
                        "offers": {
                              "$ref": "http://supermodel.io/schemaorg/properties/offers"
                        },
                        "editor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/editor"
                        },
                        "discussionUrl": {
                              "$ref": "http://supermodel.io/schemaorg/properties/discussionUrl"
                        },
                        "award": {
                              "$ref": "http://supermodel.io/schemaorg/properties/award"
                        },
                        "copyrightHolder": {
                              "$ref": "http://supermodel.io/schemaorg/properties/copyrightHolder"
                        },
                        "accessibilityHazard": {
                              "$ref": "http://supermodel.io/schemaorg/properties/accessibilityHazard"
                        },
                        "copyrightYear": {
                              "$ref": "http://supermodel.io/schemaorg/properties/copyrightYear"
                        },
                        "awards": {
                              "$ref": "http://supermodel.io/schemaorg/properties/awards"
                        },
                        "recordedAt": {
                              "$ref": "http://supermodel.io/schemaorg/properties/recordedAt"
                        },
                        "commentCount": {
                              "$ref": "http://supermodel.io/schemaorg/properties/commentCount"
                        },
                        "fileFormat": {
                              "$ref": "http://supermodel.io/schemaorg/properties/fileFormat"
                        },
                        "accessibilityAPI": {
                              "$ref": "http://supermodel.io/schemaorg/properties/accessibilityAPI"
                        },
                        "interactionStatistic": {
                              "$ref": "http://supermodel.io/schemaorg/properties/interactionStatistic"
                        },
                        "contentRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contentRating"
                        },
                        "learningResourceType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/learningResourceType"
                        },
                        "accessMode": {
                              "$ref": "http://supermodel.io/schemaorg/properties/accessMode"
                        },
                        "material": {
                              "$ref": "http://supermodel.io/schemaorg/properties/material"
                        },
                        "isFamilyFriendly": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isFamilyFriendly"
                        },
                        "version": {
                              "$ref": "http://supermodel.io/schemaorg/properties/version"
                        },
                        "dateModified": {
                              "$ref": "http://supermodel.io/schemaorg/properties/dateModified"
                        },
                        "keywords": {
                              "$ref": "http://supermodel.io/schemaorg/properties/keywords"
                        },
                        "exampleOfWork": {
                              "$ref": "http://supermodel.io/schemaorg/properties/exampleOfWork"
                        },
                        "genre": {
                              "$ref": "http://supermodel.io/schemaorg/properties/genre"
                        },
                        "mainEntity": {
                              "$ref": "http://supermodel.io/schemaorg/properties/mainEntity"
                        },
                        "author": {
                              "$ref": "http://supermodel.io/schemaorg/properties/author"
                        },
                        "encodings": {
                              "$ref": "http://supermodel.io/schemaorg/properties/encodings"
                        },
                        "isBasedOnUrl": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isBasedOnUrl"
                        },
                        "alternativeHeadline": {
                              "$ref": "http://supermodel.io/schemaorg/properties/alternativeHeadline"
                        },
                        "timeRequired": {
                              "$ref": "http://supermodel.io/schemaorg/properties/timeRequired"
                        },
                        "translator": {
                              "$ref": "http://supermodel.io/schemaorg/properties/translator"
                        },
                        "thumbnailUrl": {
                              "$ref": "http://supermodel.io/schemaorg/properties/thumbnailUrl"
                        },
                        "hasPart": {
                              "$ref": "http://supermodel.io/schemaorg/properties/hasPart"
                        },
                        "comment": {
                              "$ref": "http://supermodel.io/schemaorg/properties/comment"
                        },
                        "inLanguage": {
                              "$ref": "http://supermodel.io/schemaorg/properties/inLanguage"
                        },
                        "encodingFormat": {
                              "$ref": "http://supermodel.io/schemaorg/properties/encodingFormat"
                        },
                        "review": {
                              "$ref": "http://supermodel.io/schemaorg/properties/review"
                        },
                        "license": {
                              "$ref": "http://supermodel.io/schemaorg/properties/license"
                        },
                        "accessibilityControl": {
                              "$ref": "http://supermodel.io/schemaorg/properties/accessibilityControl"
                        },
                        "isBasedOn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isBasedOn"
                        },
                        "creator": {
                              "$ref": "http://supermodel.io/schemaorg/properties/creator"
                        },
                        "publishingPrinciples": {
                              "$ref": "http://supermodel.io/schemaorg/properties/publishingPrinciples"
                        },
                        "producer": {
                              "$ref": "http://supermodel.io/schemaorg/properties/producer"
                        },
                        "mentions": {
                              "$ref": "http://supermodel.io/schemaorg/properties/mentions"
                        },
                        "dateCreated": {
                              "$ref": "http://supermodel.io/schemaorg/properties/dateCreated"
                        },
                        "datePublished": {
                              "$ref": "http://supermodel.io/schemaorg/properties/datePublished"
                        },
                        "isAccessibleForFree": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isAccessibleForFree"
                        },
                        "headline": {
                              "$ref": "http://supermodel.io/schemaorg/properties/headline"
                        },
                        "citation": {
                              "$ref": "http://supermodel.io/schemaorg/properties/citation"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/about": {
                  "$id": "http://supermodel.io/schemaorg/properties/about",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/about",
                  "title": "about",
                  "description": "The subject matter of the content.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Thing": {
                  "$id": "http://supermodel.io/schemaorg/Thing",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Thing",
                  "title": "Thing",
                  "type": "object",
                  "description": "The most generic type of item.",
                  "properties": {
                        "sameAs": {
                              "$ref": "http://supermodel.io/schemaorg/properties/sameAs"
                        },
                        "url": {
                              "$ref": "http://supermodel.io/schemaorg/properties/url"
                        },
                        "image": {
                              "$ref": "http://supermodel.io/schemaorg/properties/image"
                        },
                        "additionalType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/additionalType"
                        },
                        "name": {
                              "$ref": "http://supermodel.io/schemaorg/properties/name"
                        },
                        "identifier": {
                              "$ref": "http://supermodel.io/schemaorg/properties/identifier"
                        },
                        "potentialAction": {
                              "$ref": "http://supermodel.io/schemaorg/properties/potentialAction"
                        },
                        "mainEntityOfPage": {
                              "$ref": "http://supermodel.io/schemaorg/properties/mainEntityOfPage"
                        },
                        "description": {
                              "$ref": "http://supermodel.io/schemaorg/properties/description"
                        },
                        "disambiguatingDescription": {
                              "$ref": "http://supermodel.io/schemaorg/properties/disambiguatingDescription"
                        },
                        "alternateName": {
                              "$ref": "http://supermodel.io/schemaorg/properties/alternateName"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/sameAs": {
                  "$id": "http://supermodel.io/schemaorg/properties/sameAs",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/sameAs",
                  "title": "sameAs",
                  "description": "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/URL": {
                  "$id": "http://supermodel.io/schemaorg/URL",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/URL",
                  "title": "URL",
                  "description": "Data type: URL.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Text": {
                  "$id": "http://supermodel.io/schemaorg/Text",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Text",
                  "title": "Text",
                  "type": "string",
                  "description": "Data type: Text.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/DataType": {
                  "$id": "http://supermodel.io/schemaorg/DataType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/DataType",
                  "title": "DataType",
                  "description": "The basic data types such as Integers, Strings, etc."
            },
            "http://supermodel.io/schemaorg/properties/url": {
                  "$id": "http://supermodel.io/schemaorg/properties/url",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/url",
                  "title": "url",
                  "description": "URL of the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/image": {
                  "$id": "http://supermodel.io/schemaorg/properties/image",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/image",
                  "title": "image",
                  "description": "An image of the item. This can be a <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a> or a fully described <a class=\"localLink\" href=\"http://schema.org/ImageObject\">ImageObject</a>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/ImageObject"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/ImageObject": {
                  "$id": "http://supermodel.io/schemaorg/ImageObject",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ImageObject",
                  "title": "ImageObject",
                  "type": "object",
                  "description": "An image file.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MediaObject"
                        }
                  ],
                  "properties": {
                        "exifData": {
                              "$ref": "http://supermodel.io/schemaorg/properties/exifData"
                        },
                        "representativeOfPage": {
                              "$ref": "http://supermodel.io/schemaorg/properties/representativeOfPage"
                        },
                        "thumbnail": {
                              "$ref": "http://supermodel.io/schemaorg/properties/thumbnail"
                        },
                        "caption": {
                              "$ref": "http://supermodel.io/schemaorg/properties/caption"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/exifData": {
                  "$id": "http://supermodel.io/schemaorg/properties/exifData",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/exifData",
                  "title": "exifData",
                  "description": "exif data for this object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/PropertyValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/PropertyValue": {
                  "$id": "http://supermodel.io/schemaorg/PropertyValue",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/PropertyValue",
                  "title": "PropertyValue",
                  "type": "object",
                  "description": "A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.<br/><br/>\n\nAlways use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "propertyID": {
                              "$ref": "http://supermodel.io/schemaorg/properties/propertyID"
                        },
                        "value": {
                              "$ref": "http://supermodel.io/schemaorg/properties/value"
                        },
                        "valueReference": {
                              "$ref": "http://supermodel.io/schemaorg/properties/valueReference"
                        },
                        "maxValue": {
                              "$ref": "http://supermodel.io/schemaorg/properties/maxValue"
                        },
                        "unitCode": {
                              "$ref": "http://supermodel.io/schemaorg/properties/unitCode"
                        },
                        "unitText": {
                              "$ref": "http://supermodel.io/schemaorg/properties/unitText"
                        },
                        "minValue": {
                              "$ref": "http://supermodel.io/schemaorg/properties/minValue"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/propertyID": {
                  "$id": "http://supermodel.io/schemaorg/properties/propertyID",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/propertyID",
                  "title": "propertyID",
                  "description": "A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be\n(1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific id of the property), or (3)\na URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).\nStandards bodies should promote a standard prefix for the identifiers of properties from their standards.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/value": {
                  "$id": "http://supermodel.io/schemaorg/properties/value",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/value",
                  "title": "value",
                  "description": "The value of the quantitative value or property value node.<br/><br/>\n\n<ul>\n<li>For <a class=\"localLink\" href=\"http://schema.org/QuantitativeValue\">QuantitativeValue</a> and <a class=\"localLink\" href=\"http://schema.org/MonetaryAmount\">MonetaryAmount</a>, the recommended type for values is 'Number'.</li>\n<li>For <a class=\"localLink\" href=\"http://schema.org/PropertyValue\">PropertyValue</a>, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>\n</ul>\n",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Boolean"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Number": {
                  "$id": "http://supermodel.io/schemaorg/Number",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Number",
                  "title": "Number",
                  "type": "number",
                  "description": "Data type: Number.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Boolean": {
                  "$id": "http://supermodel.io/schemaorg/Boolean",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Boolean",
                  "title": "Boolean",
                  "type": "boolean",
                  "description": "Boolean: True or False.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataType"
                        }
                  ],
                  "enum": [
                        true,
                        false
                  ]
            },
            "http://supermodel.io/schemaorg/StructuredValue": {
                  "$id": "http://supermodel.io/schemaorg/StructuredValue",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/StructuredValue",
                  "title": "StructuredValue",
                  "description": "Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Intangible": {
                  "$id": "http://supermodel.io/schemaorg/Intangible",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Intangible",
                  "title": "Intangible",
                  "description": "A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/valueReference": {
                  "$id": "http://supermodel.io/schemaorg/properties/valueReference",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/valueReference",
                  "title": "valueReference",
                  "description": "A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Enumeration"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/PropertyValue"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/QualitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Enumeration": {
                  "$id": "http://supermodel.io/schemaorg/Enumeration",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Enumeration",
                  "title": "Enumeration",
                  "description": "Lists or enumerations\u2014for example, a list of cuisines or music genres, etc.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/QuantitativeValue": {
                  "$id": "http://supermodel.io/schemaorg/QuantitativeValue",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/QuantitativeValue",
                  "title": "QuantitativeValue",
                  "type": "object",
                  "description": "A point value or interval for product characteristics and other purposes.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "value": {
                              "$ref": "http://supermodel.io/schemaorg/properties/value"
                        },
                        "additionalProperty": {
                              "$ref": "http://supermodel.io/schemaorg/properties/additionalProperty"
                        },
                        "valueReference": {
                              "$ref": "http://supermodel.io/schemaorg/properties/valueReference"
                        },
                        "maxValue": {
                              "$ref": "http://supermodel.io/schemaorg/properties/maxValue"
                        },
                        "unitCode": {
                              "$ref": "http://supermodel.io/schemaorg/properties/unitCode"
                        },
                        "unitText": {
                              "$ref": "http://supermodel.io/schemaorg/properties/unitText"
                        },
                        "minValue": {
                              "$ref": "http://supermodel.io/schemaorg/properties/minValue"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/additionalProperty": {
                  "$id": "http://supermodel.io/schemaorg/properties/additionalProperty",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/additionalProperty",
                  "title": "additionalProperty",
                  "description": "A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.<br/><br/>\n\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PropertyValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/maxValue": {
                  "$id": "http://supermodel.io/schemaorg/properties/maxValue",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/maxValue",
                  "title": "maxValue",
                  "description": "The upper value of some characteristic or property.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/unitCode": {
                  "$id": "http://supermodel.io/schemaorg/properties/unitCode",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/unitCode",
                  "title": "unitCode",
                  "description": "The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/unitText": {
                  "$id": "http://supermodel.io/schemaorg/properties/unitText",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/unitText",
                  "title": "unitText",
                  "description": "A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for\n<a href='unitCode'>unitCode</a>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/minValue": {
                  "$id": "http://supermodel.io/schemaorg/properties/minValue",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/minValue",
                  "title": "minValue",
                  "description": "The lower value of some characteristic or property.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/QualitativeValue": {
                  "$id": "http://supermodel.io/schemaorg/QualitativeValue",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/QualitativeValue",
                  "title": "QualitativeValue",
                  "type": "object",
                  "description": "A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.",
                  "properties": {
                        "greater": {
                              "$ref": "http://supermodel.io/schemaorg/properties/greater"
                        },
                        "equal": {
                              "$ref": "http://supermodel.io/schemaorg/properties/equal"
                        },
                        "nonEqual": {
                              "$ref": "http://supermodel.io/schemaorg/properties/nonEqual"
                        },
                        "additionalProperty": {
                              "$ref": "http://supermodel.io/schemaorg/properties/additionalProperty"
                        },
                        "lesser": {
                              "$ref": "http://supermodel.io/schemaorg/properties/lesser"
                        },
                        "valueReference": {
                              "$ref": "http://supermodel.io/schemaorg/properties/valueReference"
                        },
                        "lesserOrEqual": {
                              "$ref": "http://supermodel.io/schemaorg/properties/lesserOrEqual"
                        },
                        "greaterOrEqual": {
                              "$ref": "http://supermodel.io/schemaorg/properties/greaterOrEqual"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/greater": {
                  "$id": "http://supermodel.io/schemaorg/properties/greater",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/greater",
                  "title": "greater",
                  "description": "This ordering relation for qualitative values indicates that the subject is greater than the object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QualitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/equal": {
                  "$id": "http://supermodel.io/schemaorg/properties/equal",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/equal",
                  "title": "equal",
                  "description": "This ordering relation for qualitative values indicates that the subject is equal to the object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QualitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/nonEqual": {
                  "$id": "http://supermodel.io/schemaorg/properties/nonEqual",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/nonEqual",
                  "title": "nonEqual",
                  "description": "This ordering relation for qualitative values indicates that the subject is not equal to the object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QualitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/lesser": {
                  "$id": "http://supermodel.io/schemaorg/properties/lesser",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/lesser",
                  "title": "lesser",
                  "description": "This ordering relation for qualitative values indicates that the subject is lesser than the object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QualitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/lesserOrEqual": {
                  "$id": "http://supermodel.io/schemaorg/properties/lesserOrEqual",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/lesserOrEqual",
                  "title": "lesserOrEqual",
                  "description": "This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QualitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/greaterOrEqual": {
                  "$id": "http://supermodel.io/schemaorg/properties/greaterOrEqual",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/greaterOrEqual",
                  "title": "greaterOrEqual",
                  "description": "This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QualitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/representativeOfPage": {
                  "$id": "http://supermodel.io/schemaorg/properties/representativeOfPage",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/representativeOfPage",
                  "title": "representativeOfPage",
                  "description": "Indicates whether this image is representative of the content of the page.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Boolean"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/thumbnail": {
                  "$id": "http://supermodel.io/schemaorg/properties/thumbnail",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/thumbnail",
                  "title": "thumbnail",
                  "description": "Thumbnail image for an image or video.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ImageObject"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/caption": {
                  "$id": "http://supermodel.io/schemaorg/properties/caption",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/caption",
                  "title": "caption",
                  "description": "The caption for this object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/MediaObject": {
                  "$id": "http://supermodel.io/schemaorg/MediaObject",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MediaObject",
                  "title": "MediaObject",
                  "type": "object",
                  "description": "A media object, such as an image, video, or audio object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "uploadDate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/uploadDate"
                        },
                        "playerType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/playerType"
                        },
                        "height": {
                              "$ref": "http://supermodel.io/schemaorg/properties/height"
                        },
                        "bitrate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/bitrate"
                        },
                        "requiresSubscription": {
                              "$ref": "http://supermodel.io/schemaorg/properties/requiresSubscription"
                        },
                        "regionsAllowed": {
                              "$ref": "http://supermodel.io/schemaorg/properties/regionsAllowed"
                        },
                        "contentSize": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contentSize"
                        },
                        "embedUrl": {
                              "$ref": "http://supermodel.io/schemaorg/properties/embedUrl"
                        },
                        "width": {
                              "$ref": "http://supermodel.io/schemaorg/properties/width"
                        },
                        "contentUrl": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contentUrl"
                        },
                        "associatedArticle": {
                              "$ref": "http://supermodel.io/schemaorg/properties/associatedArticle"
                        },
                        "productionCompany": {
                              "$ref": "http://supermodel.io/schemaorg/properties/productionCompany"
                        },
                        "duration": {
                              "$ref": "http://supermodel.io/schemaorg/properties/duration"
                        },
                        "encodesCreativeWork": {
                              "$ref": "http://supermodel.io/schemaorg/properties/encodesCreativeWork"
                        },
                        "encodingFormat": {
                              "$ref": "http://supermodel.io/schemaorg/properties/encodingFormat"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/uploadDate": {
                  "$id": "http://supermodel.io/schemaorg/properties/uploadDate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/uploadDate",
                  "title": "uploadDate",
                  "description": "Date when this media object was uploaded to this site.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Date": {
                  "$id": "http://supermodel.io/schemaorg/Date",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Date",
                  "title": "Date",
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
                  "description": "A date value in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 date format</a>.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/playerType": {
                  "$id": "http://supermodel.io/schemaorg/properties/playerType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/playerType",
                  "title": "playerType",
                  "description": "Player type required&#x2014;for example, Flash or Silverlight.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/height": {
                  "$id": "http://supermodel.io/schemaorg/properties/height",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/height",
                  "title": "height",
                  "description": "The height of the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Distance"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Distance": {
                  "$id": "http://supermodel.io/schemaorg/Distance",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Distance",
                  "title": "Distance",
                  "description": "Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Quantity"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Quantity": {
                  "$id": "http://supermodel.io/schemaorg/Quantity",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Quantity",
                  "title": "Quantity",
                  "description": "Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/bitrate": {
                  "$id": "http://supermodel.io/schemaorg/properties/bitrate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/bitrate",
                  "title": "bitrate",
                  "description": "The bitrate of the media object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/requiresSubscription": {
                  "$id": "http://supermodel.io/schemaorg/properties/requiresSubscription",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/requiresSubscription",
                  "title": "requiresSubscription",
                  "description": "Indicates if use of the media require a subscription  (either paid or free). Allowed values are <code>true</code> or <code>false</code> (note that an earlier version had 'yes', 'no').",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Boolean"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/regionsAllowed": {
                  "$id": "http://supermodel.io/schemaorg/properties/regionsAllowed",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/regionsAllowed",
                  "title": "regionsAllowed",
                  "description": "The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in <a href=\"http://en.wikipedia.org/wiki/ISO_3166\">ISO 3166 format</a>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Place": {
                  "$id": "http://supermodel.io/schemaorg/Place",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Place",
                  "title": "Place",
                  "type": "object",
                  "description": "Entities that have a somewhat fixed, physical extension.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ],
                  "properties": {
                        "photo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/photo"
                        },
                        "address": {
                              "$ref": "http://supermodel.io/schemaorg/properties/address"
                        },
                        "openingHoursSpecification": {
                              "$ref": "http://supermodel.io/schemaorg/properties/openingHoursSpecification"
                        },
                        "maps": {
                              "$ref": "http://supermodel.io/schemaorg/properties/maps"
                        },
                        "faxNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/faxNumber"
                        },
                        "smokingAllowed": {
                              "$ref": "http://supermodel.io/schemaorg/properties/smokingAllowed"
                        },
                        "globalLocationNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/globalLocationNumber"
                        },
                        "maximumAttendeeCapacity": {
                              "$ref": "http://supermodel.io/schemaorg/properties/maximumAttendeeCapacity"
                        },
                        "reviews": {
                              "$ref": "http://supermodel.io/schemaorg/properties/reviews"
                        },
                        "aggregateRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating"
                        },
                        "photos": {
                              "$ref": "http://supermodel.io/schemaorg/properties/photos"
                        },
                        "map": {
                              "$ref": "http://supermodel.io/schemaorg/properties/map"
                        },
                        "branchCode": {
                              "$ref": "http://supermodel.io/schemaorg/properties/branchCode"
                        },
                        "hasMap": {
                              "$ref": "http://supermodel.io/schemaorg/properties/hasMap"
                        },
                        "additionalProperty": {
                              "$ref": "http://supermodel.io/schemaorg/properties/additionalProperty"
                        },
                        "events": {
                              "$ref": "http://supermodel.io/schemaorg/properties/events"
                        },
                        "specialOpeningHoursSpecification": {
                              "$ref": "http://supermodel.io/schemaorg/properties/specialOpeningHoursSpecification"
                        },
                        "amenityFeature": {
                              "$ref": "http://supermodel.io/schemaorg/properties/amenityFeature"
                        },
                        "logo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/logo"
                        },
                        "telephone": {
                              "$ref": "http://supermodel.io/schemaorg/properties/telephone"
                        },
                        "geo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/geo"
                        },
                        "containedInPlace": {
                              "$ref": "http://supermodel.io/schemaorg/properties/containedInPlace"
                        },
                        "review": {
                              "$ref": "http://supermodel.io/schemaorg/properties/review"
                        },
                        "containedIn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/containedIn"
                        },
                        "event": {
                              "$ref": "http://supermodel.io/schemaorg/properties/event"
                        },
                        "containsPlace": {
                              "$ref": "http://supermodel.io/schemaorg/properties/containsPlace"
                        },
                        "isicV4": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isicV4"
                        },
                        "isAccessibleForFree": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isAccessibleForFree"
                        },
                        "publicAccess": {
                              "$ref": "http://supermodel.io/schemaorg/properties/publicAccess"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/photo": {
                  "$id": "http://supermodel.io/schemaorg/properties/photo",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/photo",
                  "title": "photo",
                  "description": "A photograph of this place.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ImageObject"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Photograph"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Photograph": {
                  "$id": "http://supermodel.io/schemaorg/Photograph",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Photograph",
                  "title": "Photograph",
                  "description": "A photograph.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/address": {
                  "$id": "http://supermodel.io/schemaorg/properties/address",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/address",
                  "title": "address",
                  "description": "Physical address of the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PostalAddress"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/PostalAddress": {
                  "$id": "http://supermodel.io/schemaorg/PostalAddress",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/PostalAddress",
                  "title": "PostalAddress",
                  "type": "object",
                  "description": "The mailing address.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ContactPoint"
                        }
                  ],
                  "properties": {
                        "postOfficeBoxNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/postOfficeBoxNumber"
                        },
                        "streetAddress": {
                              "$ref": "http://supermodel.io/schemaorg/properties/streetAddress"
                        },
                        "addressCountry": {
                              "$ref": "http://supermodel.io/schemaorg/properties/addressCountry"
                        },
                        "addressRegion": {
                              "$ref": "http://supermodel.io/schemaorg/properties/addressRegion"
                        },
                        "postalCode": {
                              "$ref": "http://supermodel.io/schemaorg/properties/postalCode"
                        },
                        "addressLocality": {
                              "$ref": "http://supermodel.io/schemaorg/properties/addressLocality"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/postOfficeBoxNumber": {
                  "$id": "http://supermodel.io/schemaorg/properties/postOfficeBoxNumber",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/postOfficeBoxNumber",
                  "title": "postOfficeBoxNumber",
                  "description": "The post office box number for PO box addresses.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/streetAddress": {
                  "$id": "http://supermodel.io/schemaorg/properties/streetAddress",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/streetAddress",
                  "title": "streetAddress",
                  "description": "The street address. For example, 1600 Amphitheatre Pkwy.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/addressCountry": {
                  "$id": "http://supermodel.io/schemaorg/properties/addressCountry",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/addressCountry",
                  "title": "addressCountry",
                  "description": "The country. For example, USA. You can also provide the two-letter <a href=\"http://en.wikipedia.org/wiki/ISO_3166-1\">ISO 3166-1 alpha-2 country code</a>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Country"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Country": {
                  "$id": "http://supermodel.io/schemaorg/Country",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Country",
                  "title": "Country",
                  "description": "A country.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/AdministrativeArea"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/AdministrativeArea": {
                  "$id": "http://supermodel.io/schemaorg/AdministrativeArea",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/AdministrativeArea",
                  "title": "AdministrativeArea",
                  "description": "A geographical region, typically under the jurisdiction of a particular government.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/addressRegion": {
                  "$id": "http://supermodel.io/schemaorg/properties/addressRegion",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/addressRegion",
                  "title": "addressRegion",
                  "description": "The region. For example, CA.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/postalCode": {
                  "$id": "http://supermodel.io/schemaorg/properties/postalCode",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/postalCode",
                  "title": "postalCode",
                  "description": "The postal code. For example, 94043.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/addressLocality": {
                  "$id": "http://supermodel.io/schemaorg/properties/addressLocality",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/addressLocality",
                  "title": "addressLocality",
                  "description": "The locality. For example, Mountain View.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/ContactPoint": {
                  "$id": "http://supermodel.io/schemaorg/ContactPoint",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ContactPoint",
                  "title": "ContactPoint",
                  "type": "object",
                  "description": "A contact point&#x2014;for example, a Customer Complaints department.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "serviceArea": {
                              "$ref": "http://supermodel.io/schemaorg/properties/serviceArea"
                        },
                        "areaServed": {
                              "$ref": "http://supermodel.io/schemaorg/properties/areaServed"
                        },
                        "faxNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/faxNumber"
                        },
                        "hoursAvailable": {
                              "$ref": "http://supermodel.io/schemaorg/properties/hoursAvailable"
                        },
                        "contactOption": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contactOption"
                        },
                        "availableLanguage": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availableLanguage"
                        },
                        "telephone": {
                              "$ref": "http://supermodel.io/schemaorg/properties/telephone"
                        },
                        "email": {
                              "$ref": "http://supermodel.io/schemaorg/properties/email"
                        },
                        "contactType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contactType"
                        },
                        "productSupported": {
                              "$ref": "http://supermodel.io/schemaorg/properties/productSupported"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/serviceArea": {
                  "$id": "http://supermodel.io/schemaorg/properties/serviceArea",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/serviceArea",
                  "title": "serviceArea",
                  "description": "The geographic area where the service is provided.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/AdministrativeArea"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/GeoShape"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/GeoShape": {
                  "$id": "http://supermodel.io/schemaorg/GeoShape",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/GeoShape",
                  "title": "GeoShape",
                  "type": "object",
                  "description": "The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "address": {
                              "$ref": "http://supermodel.io/schemaorg/properties/address"
                        },
                        "line": {
                              "$ref": "http://supermodel.io/schemaorg/properties/line"
                        },
                        "circle": {
                              "$ref": "http://supermodel.io/schemaorg/properties/circle"
                        },
                        "box": {
                              "$ref": "http://supermodel.io/schemaorg/properties/box"
                        },
                        "addressCountry": {
                              "$ref": "http://supermodel.io/schemaorg/properties/addressCountry"
                        },
                        "postalCode": {
                              "$ref": "http://supermodel.io/schemaorg/properties/postalCode"
                        },
                        "elevation": {
                              "$ref": "http://supermodel.io/schemaorg/properties/elevation"
                        },
                        "polygon": {
                              "$ref": "http://supermodel.io/schemaorg/properties/polygon"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/line": {
                  "$id": "http://supermodel.io/schemaorg/properties/line",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/line",
                  "title": "line",
                  "description": "A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/circle": {
                  "$id": "http://supermodel.io/schemaorg/properties/circle",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/circle",
                  "title": "circle",
                  "description": "A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/box": {
                  "$id": "http://supermodel.io/schemaorg/properties/box",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/box",
                  "title": "box",
                  "description": "A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/elevation": {
                  "$id": "http://supermodel.io/schemaorg/properties/elevation",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/elevation",
                  "title": "elevation",
                  "description": "The elevation of a location (<a href=\"https://en.wikipedia.org/wiki/World_Geodetic_System\">WGS 84</a>).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/polygon": {
                  "$id": "http://supermodel.io/schemaorg/properties/polygon",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/polygon",
                  "title": "polygon",
                  "description": "A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/areaServed": {
                  "$id": "http://supermodel.io/schemaorg/properties/areaServed",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/areaServed",
                  "title": "areaServed",
                  "description": "The geographic area where a service or offered item is provided.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/AdministrativeArea"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/GeoShape"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/faxNumber": {
                  "$id": "http://supermodel.io/schemaorg/properties/faxNumber",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/faxNumber",
                  "title": "faxNumber",
                  "description": "The fax number.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/hoursAvailable": {
                  "$id": "http://supermodel.io/schemaorg/properties/hoursAvailable",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/hoursAvailable",
                  "title": "hoursAvailable",
                  "description": "The hours during which this service or contact is available.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/OpeningHoursSpecification"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/OpeningHoursSpecification": {
                  "$id": "http://supermodel.io/schemaorg/OpeningHoursSpecification",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/OpeningHoursSpecification",
                  "title": "OpeningHoursSpecification",
                  "type": "object",
                  "description": "A structured value providing information about the opening hours of a place or a certain service inside a place.<br/><br/>\n\nThe place is <strong>open</strong> if the <a class=\"localLink\" href=\"http://schema.org/opens\">opens</a> property is specified, and <strong>closed</strong> otherwise.<br/><br/>\n\nIf the value for the <a class=\"localLink\" href=\"http://schema.org/closes\">closes</a> property is less than the value for the <a class=\"localLink\" href=\"http://schema.org/opens\">opens</a> property then the hour range is assumed to span over the next day.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "validFrom": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validFrom"
                        },
                        "validThrough": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validThrough"
                        },
                        "opens": {
                              "$ref": "http://supermodel.io/schemaorg/properties/opens"
                        },
                        "closes": {
                              "$ref": "http://supermodel.io/schemaorg/properties/closes"
                        },
                        "dayOfWeek": {
                              "$ref": "http://supermodel.io/schemaorg/properties/dayOfWeek"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/validFrom": {
                  "$id": "http://supermodel.io/schemaorg/properties/validFrom",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/validFrom",
                  "title": "validFrom",
                  "description": "The date when the item becomes valid.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/DateTime": {
                  "$id": "http://supermodel.io/schemaorg/DateTime",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/DateTime",
                  "title": "DateTime",
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})$",
                  "description": "A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/validThrough": {
                  "$id": "http://supermodel.io/schemaorg/properties/validThrough",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/validThrough",
                  "title": "validThrough",
                  "description": "The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/opens": {
                  "$id": "http://supermodel.io/schemaorg/properties/opens",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/opens",
                  "title": "opens",
                  "description": "The opening hour of the place or service on the given day(s) of the week.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Time"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Time": {
                  "$id": "http://supermodel.io/schemaorg/Time",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Time",
                  "title": "Time",
                  "type": "string",
                  "description": "A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see <a href=\"http://www.w3.org/TR/xmlschema-2/#time\">XML schema for details</a>).",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/closes": {
                  "$id": "http://supermodel.io/schemaorg/properties/closes",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/closes",
                  "title": "closes",
                  "description": "The closing hour of the place or service on the given day(s) of the week.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Time"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/dayOfWeek": {
                  "$id": "http://supermodel.io/schemaorg/properties/dayOfWeek",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/dayOfWeek",
                  "title": "dayOfWeek",
                  "description": "The day of the week for which these opening hours are valid.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DayOfWeek"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/DayOfWeek": {
                  "$id": "http://supermodel.io/schemaorg/DayOfWeek",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/DayOfWeek",
                  "title": "DayOfWeek",
                  "type": "string",
                  "description": "The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.<br/><br/>\n\nOriginally, URLs from <a href=\"http://purl.org/goodrelations/v1\">GoodRelations</a> were used (for <a class=\"localLink\" href=\"http://schema.org/Monday\">Monday</a>, <a class=\"localLink\" href=\"http://schema.org/Tuesday\">Tuesday</a>, <a class=\"localLink\" href=\"http://schema.org/Wednesday\">Wednesday</a>, <a class=\"localLink\" href=\"http://schema.org/Thursday\">Thursday</a>, <a class=\"localLink\" href=\"http://schema.org/Friday\">Friday</a>, <a class=\"localLink\" href=\"http://schema.org/Saturday\">Saturday</a>, <a class=\"localLink\" href=\"http://schema.org/Sunday\">Sunday</a> plus a special entry for <a class=\"localLink\" href=\"http://schema.org/PublicHolidays\">PublicHolidays</a>); these have now been integrated directly into schema.org.",
                  "enum": [
                        "Wednesday",
                        "Sunday",
                        "PublicHolidays",
                        "Monday",
                        "Friday",
                        "Tuesday",
                        "Saturday",
                        "Thursday"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/contactOption": {
                  "$id": "http://supermodel.io/schemaorg/properties/contactOption",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/contactOption",
                  "title": "contactOption",
                  "description": "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ContactPointOption"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/ContactPointOption": {
                  "$id": "http://supermodel.io/schemaorg/ContactPointOption",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ContactPointOption",
                  "title": "ContactPointOption",
                  "type": "string",
                  "description": "Enumerated options related to a ContactPoint.",
                  "enum": [
                        "HearingImpairedSupported",
                        "TollFree"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/availableLanguage": {
                  "$id": "http://supermodel.io/schemaorg/properties/availableLanguage",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/availableLanguage",
                  "title": "availableLanguage",
                  "description": "A language someone may use with or at the item, service or place. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/inLanguage\">inLanguage</a>",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Language"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Language": {
                  "$id": "http://supermodel.io/schemaorg/Language",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Language",
                  "title": "Language",
                  "description": "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in <a href=\"https://en.wikipedia.org/wiki/IETF_language_tag\">BCP 47</a> can be used via the <a class=\"localLink\" href=\"http://schema.org/alternateName\">alternateName</a> property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using <a class=\"localLink\" href=\"http://schema.org/ComputerLanguage\">ComputerLanguage</a>.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/telephone": {
                  "$id": "http://supermodel.io/schemaorg/properties/telephone",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/telephone",
                  "title": "telephone",
                  "description": "The telephone number.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/email": {
                  "$id": "http://supermodel.io/schemaorg/properties/email",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/email",
                  "title": "email",
                  "description": "Email address.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/contactType": {
                  "$id": "http://supermodel.io/schemaorg/properties/contactType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/contactType",
                  "title": "contactType",
                  "description": "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/productSupported": {
                  "$id": "http://supermodel.io/schemaorg/properties/productSupported",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/productSupported",
                  "title": "productSupported",
                  "description": "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\").",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Product": {
                  "$id": "http://supermodel.io/schemaorg/Product",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Product",
                  "title": "Product",
                  "type": "object",
                  "description": "Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ],
                  "properties": {
                        "manufacturer": {
                              "$ref": "http://supermodel.io/schemaorg/properties/manufacturer"
                        },
                        "sku": {
                              "$ref": "http://supermodel.io/schemaorg/properties/sku"
                        },
                        "productionDate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/productionDate"
                        },
                        "audience": {
                              "$ref": "http://supermodel.io/schemaorg/properties/audience"
                        },
                        "mpn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/mpn"
                        },
                        "height": {
                              "$ref": "http://supermodel.io/schemaorg/properties/height"
                        },
                        "gtin8": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin8"
                        },
                        "reviews": {
                              "$ref": "http://supermodel.io/schemaorg/properties/reviews"
                        },
                        "aggregateRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating"
                        },
                        "isConsumableFor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isConsumableFor"
                        },
                        "offers": {
                              "$ref": "http://supermodel.io/schemaorg/properties/offers"
                        },
                        "award": {
                              "$ref": "http://supermodel.io/schemaorg/properties/award"
                        },
                        "category": {
                              "$ref": "http://supermodel.io/schemaorg/properties/category"
                        },
                        "width": {
                              "$ref": "http://supermodel.io/schemaorg/properties/width"
                        },
                        "awards": {
                              "$ref": "http://supermodel.io/schemaorg/properties/awards"
                        },
                        "additionalProperty": {
                              "$ref": "http://supermodel.io/schemaorg/properties/additionalProperty"
                        },
                        "isAccessoryOrSparePartFor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isAccessoryOrSparePartFor"
                        },
                        "logo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/logo"
                        },
                        "gtin14": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin14"
                        },
                        "gtin13": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin13"
                        },
                        "gtin12": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin12"
                        },
                        "material": {
                              "$ref": "http://supermodel.io/schemaorg/properties/material"
                        },
                        "weight": {
                              "$ref": "http://supermodel.io/schemaorg/properties/weight"
                        },
                        "isSimilarTo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isSimilarTo"
                        },
                        "model": {
                              "$ref": "http://supermodel.io/schemaorg/properties/model"
                        },
                        "color": {
                              "$ref": "http://supermodel.io/schemaorg/properties/color"
                        },
                        "isRelatedTo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isRelatedTo"
                        },
                        "productID": {
                              "$ref": "http://supermodel.io/schemaorg/properties/productID"
                        },
                        "review": {
                              "$ref": "http://supermodel.io/schemaorg/properties/review"
                        },
                        "depth": {
                              "$ref": "http://supermodel.io/schemaorg/properties/depth"
                        },
                        "purchaseDate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/purchaseDate"
                        },
                        "itemCondition": {
                              "$ref": "http://supermodel.io/schemaorg/properties/itemCondition"
                        },
                        "brand": {
                              "$ref": "http://supermodel.io/schemaorg/properties/brand"
                        },
                        "releaseDate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/releaseDate"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/manufacturer": {
                  "$id": "http://supermodel.io/schemaorg/properties/manufacturer",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/manufacturer",
                  "title": "manufacturer",
                  "description": "The manufacturer of the product.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Organization": {
                  "$id": "http://supermodel.io/schemaorg/Organization",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Organization",
                  "title": "Organization",
                  "type": "object",
                  "required":["legalName"],
                  "description": "An organization such as a school, NGO, corporation, club, etc.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ],
                  "properties": {
                        "serviceArea": {
                              "$ref": "http://supermodel.io/schemaorg/properties/serviceArea"
                        },
                        "memberOf": {
                              "$ref": "http://supermodel.io/schemaorg/properties/memberOf"
                        },
                        "address": {
                              "$ref": "http://supermodel.io/schemaorg/properties/address"
                        },
                        "funder": {
                              "$ref": "http://supermodel.io/schemaorg/properties/funder"
                        },
                        "sponsor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/sponsor"
                        },
                        "areaServed": {
                              "$ref": "http://supermodel.io/schemaorg/properties/areaServed"
                        },
                        "faxNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/faxNumber"
                        },
                        "subOrganization": {
                              "$ref": "http://supermodel.io/schemaorg/properties/subOrganization"
                        },
                        "hasOfferCatalog": {
                              "$ref": "http://supermodel.io/schemaorg/properties/hasOfferCatalog"
                        },
                        "globalLocationNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/globalLocationNumber"
                        },
                        "reviews": {
                              "$ref": "http://supermodel.io/schemaorg/properties/reviews"
                        },
                        "members": {
                              "$ref": "http://supermodel.io/schemaorg/properties/members"
                        },
                        "aggregateRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating"
                        },
                        "duns": {
                              "$ref": "http://supermodel.io/schemaorg/properties/duns"
                        },
                        "taxID": {
                              "$ref": "http://supermodel.io/schemaorg/properties/taxID"
                        },
                        "award": {
                              "$ref": "http://supermodel.io/schemaorg/properties/award"
                        },
                        "makesOffer": {
                              "$ref": "http://supermodel.io/schemaorg/properties/makesOffer"
                        },
                        "contactPoints": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contactPoints"
                        },
                        "awards": {
                              "$ref": "http://supermodel.io/schemaorg/properties/awards"
                        },
                        "leiCode": {
                              "$ref": "http://supermodel.io/schemaorg/properties/leiCode"
                        },
                        "seeks": {
                              "$ref": "http://supermodel.io/schemaorg/properties/seeks"
                        },
                        "member": {
                              "$ref": "http://supermodel.io/schemaorg/properties/member"
                        },
                        "founders": {
                              "$ref": "http://supermodel.io/schemaorg/properties/founders"
                        },
                        "alumni": {
                              "$ref": "http://supermodel.io/schemaorg/properties/alumni"
                        },
                        "dissolutionDate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/dissolutionDate"
                        },
                        "events": {
                              "$ref": "http://supermodel.io/schemaorg/properties/events"
                        },
                        "logo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/logo"
                        },
                        "employees": {
                              "$ref": "http://supermodel.io/schemaorg/properties/employees"
                        },
                        "telephone": {
                              "$ref": "http://supermodel.io/schemaorg/properties/telephone"
                        },
                        "email": {
                              "$ref": "http://supermodel.io/schemaorg/properties/email"
                        },
                        "department": {
                              "$ref": "http://supermodel.io/schemaorg/properties/department"
                        },
                        "contactPoint": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contactPoint"
                        },
                        "parentOrganization": {
                              "$ref": "http://supermodel.io/schemaorg/properties/parentOrganization"
                        },
                        "legalName": {
                              "$ref": "http://supermodel.io/schemaorg/properties/legalName"
                        },
                        "foundingDate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/foundingDate"
                        },
                        "employee": {
                              "$ref": "http://supermodel.io/schemaorg/properties/employee"
                        },
                        "numberOfEmployees": {
                              "$ref": "http://supermodel.io/schemaorg/properties/numberOfEmployees"
                        },
                        "naics": {
                              "$ref": "http://supermodel.io/schemaorg/properties/naics"
                        },
                        "hasPOS": {
                              "$ref": "http://supermodel.io/schemaorg/properties/hasPOS"
                        },
                        "review": {
                              "$ref": "http://supermodel.io/schemaorg/properties/review"
                        },
                        "foundingLocation": {
                              "$ref": "http://supermodel.io/schemaorg/properties/foundingLocation"
                        },
                        "owns": {
                              "$ref": "http://supermodel.io/schemaorg/properties/owns"
                        },
                        "event": {
                              "$ref": "http://supermodel.io/schemaorg/properties/event"
                        },
                        "founder": {
                              "$ref": "http://supermodel.io/schemaorg/properties/founder"
                        },
                        "publishingPrinciples": {
                              "$ref": "http://supermodel.io/schemaorg/properties/publishingPrinciples"
                        },
                        "isicV4": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isicV4"
                        },
                        "location": {
                              "$ref": "http://supermodel.io/schemaorg/properties/location"
                        },
                        "brand": {
                              "$ref": "http://supermodel.io/schemaorg/properties/brand"
                        },
                        "vatID": {
                              "$ref": "http://supermodel.io/schemaorg/properties/vatID"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/memberOf": {
                  "$id": "http://supermodel.io/schemaorg/properties/memberOf",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/memberOf",
                  "title": "memberOf",
                  "description": "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ProgramMembership"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/ProgramMembership": {
                  "$id": "http://supermodel.io/schemaorg/ProgramMembership",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ProgramMembership",
                  "title": "ProgramMembership",
                  "type": "object",
                  "description": "Used to describe membership in a loyalty programs (e.g. \"StarAliance\"), traveler clubs (e.g. \"AAA\"), purchase clubs (\"Safeway Club\"), etc.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "membershipNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/membershipNumber"
                        },
                        "members": {
                              "$ref": "http://supermodel.io/schemaorg/properties/members"
                        },
                        "member": {
                              "$ref": "http://supermodel.io/schemaorg/properties/member"
                        },
                        "programName": {
                              "$ref": "http://supermodel.io/schemaorg/properties/programName"
                        },
                        "hostingOrganization": {
                              "$ref": "http://supermodel.io/schemaorg/properties/hostingOrganization"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/membershipNumber": {
                  "$id": "http://supermodel.io/schemaorg/properties/membershipNumber",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/membershipNumber",
                  "title": "membershipNumber",
                  "description": "A unique identifier for the membership.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/members": {
                  "$id": "http://supermodel.io/schemaorg/properties/members",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/members",
                  "title": "members",
                  "description": "A member of this organization.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Person": {
                  "$id": "http://supermodel.io/schemaorg/Person",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Person",
                  "title": "Person",
                  "type": "object",
                  "description": "A person (alive, dead, undead, or fictional).",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ],
                  "properties": {
                        "memberOf": {
                              "$ref": "http://supermodel.io/schemaorg/properties/memberOf"
                        },
                        "address": {
                              "$ref": "http://supermodel.io/schemaorg/properties/address"
                        },
                        "spouse": {
                              "$ref": "http://supermodel.io/schemaorg/properties/spouse"
                        },
                        "funder": {
                              "$ref": "http://supermodel.io/schemaorg/properties/funder"
                        },
                        "colleagues": {
                              "$ref": "http://supermodel.io/schemaorg/properties/colleagues"
                        },
                        "sponsor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/sponsor"
                        },
                        "deathDate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/deathDate"
                        },
                        "height": {
                              "$ref": "http://supermodel.io/schemaorg/properties/height"
                        },
                        "workLocation": {
                              "$ref": "http://supermodel.io/schemaorg/properties/workLocation"
                        },
                        "netWorth": {
                              "$ref": "http://supermodel.io/schemaorg/properties/netWorth"
                        },
                        "faxNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/faxNumber"
                        },
                        "jobTitle": {
                              "$ref": "http://supermodel.io/schemaorg/properties/jobTitle"
                        },
                        "hasOfferCatalog": {
                              "$ref": "http://supermodel.io/schemaorg/properties/hasOfferCatalog"
                        },
                        "deathPlace": {
                              "$ref": "http://supermodel.io/schemaorg/properties/deathPlace"
                        },
                        "globalLocationNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/globalLocationNumber"
                        },
                        "birthPlace": {
                              "$ref": "http://supermodel.io/schemaorg/properties/birthPlace"
                        },
                        "gender": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gender"
                        },
                        "alumniOf": {
                              "$ref": "http://supermodel.io/schemaorg/properties/alumniOf"
                        },
                        "homeLocation": {
                              "$ref": "http://supermodel.io/schemaorg/properties/homeLocation"
                        },
                        "duns": {
                              "$ref": "http://supermodel.io/schemaorg/properties/duns"
                        },
                        "taxID": {
                              "$ref": "http://supermodel.io/schemaorg/properties/taxID"
                        },
                        "award": {
                              "$ref": "http://supermodel.io/schemaorg/properties/award"
                        },
                        "birthDate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/birthDate"
                        },
                        "makesOffer": {
                              "$ref": "http://supermodel.io/schemaorg/properties/makesOffer"
                        },
                        "contactPoints": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contactPoints"
                        },
                        "awards": {
                              "$ref": "http://supermodel.io/schemaorg/properties/awards"
                        },
                        "familyName": {
                              "$ref": "http://supermodel.io/schemaorg/properties/familyName"
                        },
                        "seeks": {
                              "$ref": "http://supermodel.io/schemaorg/properties/seeks"
                        },
                        "sibling": {
                              "$ref": "http://supermodel.io/schemaorg/properties/sibling"
                        },
                        "performerIn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/performerIn"
                        },
                        "honorificPrefix": {
                              "$ref": "http://supermodel.io/schemaorg/properties/honorificPrefix"
                        },
                        "additionalName": {
                              "$ref": "http://supermodel.io/schemaorg/properties/additionalName"
                        },
                        "siblings": {
                              "$ref": "http://supermodel.io/schemaorg/properties/siblings"
                        },
                        "telephone": {
                              "$ref": "http://supermodel.io/schemaorg/properties/telephone"
                        },
                        "email": {
                              "$ref": "http://supermodel.io/schemaorg/properties/email"
                        },
                        "weight": {
                              "$ref": "http://supermodel.io/schemaorg/properties/weight"
                        },
                        "contactPoint": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contactPoint"
                        },
                        "colleague": {
                              "$ref": "http://supermodel.io/schemaorg/properties/colleague"
                        },
                        "children": {
                              "$ref": "http://supermodel.io/schemaorg/properties/children"
                        },
                        "parents": {
                              "$ref": "http://supermodel.io/schemaorg/properties/parents"
                        },
                        "givenName": {
                              "$ref": "http://supermodel.io/schemaorg/properties/givenName"
                        },
                        "naics": {
                              "$ref": "http://supermodel.io/schemaorg/properties/naics"
                        },
                        "hasPOS": {
                              "$ref": "http://supermodel.io/schemaorg/properties/hasPOS"
                        },
                        "parent": {
                              "$ref": "http://supermodel.io/schemaorg/properties/parent"
                        },
                        "owns": {
                              "$ref": "http://supermodel.io/schemaorg/properties/owns"
                        },
                        "affiliation": {
                              "$ref": "http://supermodel.io/schemaorg/properties/affiliation"
                        },
                        "publishingPrinciples": {
                              "$ref": "http://supermodel.io/schemaorg/properties/publishingPrinciples"
                        },
                        "isicV4": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isicV4"
                        },
                        "brand": {
                              "$ref": "http://supermodel.io/schemaorg/properties/brand"
                        },
                        "honorificSuffix": {
                              "$ref": "http://supermodel.io/schemaorg/properties/honorificSuffix"
                        },
                        "vatID": {
                              "$ref": "http://supermodel.io/schemaorg/properties/vatID"
                        },
                        "nationality": {
                              "$ref": "http://supermodel.io/schemaorg/properties/nationality"
                        },
                        "relatedTo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/relatedTo"
                        },
                        "follows": {
                              "$ref": "http://supermodel.io/schemaorg/properties/follows"
                        },
                        "knows": {
                              "$ref": "http://supermodel.io/schemaorg/properties/knows"
                        },
                        "worksFor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/worksFor"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/spouse": {
                  "$id": "http://supermodel.io/schemaorg/properties/spouse",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/spouse",
                  "title": "spouse",
                  "description": "The person's spouse.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/funder": {
                  "$id": "http://supermodel.io/schemaorg/properties/funder",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/funder",
                  "title": "funder",
                  "description": "A person or organization that supports (sponsors) something through some kind of financial contribution.",
                  "anyOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/colleagues": {
                  "$id": "http://supermodel.io/schemaorg/properties/colleagues",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/colleagues",
                  "title": "colleagues",
                  "description": "A colleague of the person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/sponsor": {
                  "$id": "http://supermodel.io/schemaorg/properties/sponsor",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/sponsor",
                  "title": "sponsor",
                  "description": "A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/deathDate": {
                  "$id": "http://supermodel.io/schemaorg/properties/deathDate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/deathDate",
                  "title": "deathDate",
                  "description": "Date of death.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/workLocation": {
                  "$id": "http://supermodel.io/schemaorg/properties/workLocation",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/workLocation",
                  "title": "workLocation",
                  "description": "A contact location for a person's place of work.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ContactPoint"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/netWorth": {
                  "$id": "http://supermodel.io/schemaorg/properties/netWorth",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/netWorth",
                  "title": "netWorth",
                  "description": "The total financial value of the person as calculated by subtracting assets from liabilities.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MonetaryAmount"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/PriceSpecification"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/MonetaryAmount": {
                  "$id": "http://supermodel.io/schemaorg/MonetaryAmount",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MonetaryAmount",
                  "title": "MonetaryAmount",
                  "type": "object",
                  "description": "A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between \u00a31,000 and \u00a31,000,000 GBP, or the value of a salary, etc. It is recommended to use <a class=\"localLink\" href=\"http://schema.org/PriceSpecification\">PriceSpecification</a> Types to describe the price of an Offer, Invoice, etc.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "value": {
                              "$ref": "http://supermodel.io/schemaorg/properties/value"
                        },
                        "currency": {
                              "$ref": "http://supermodel.io/schemaorg/properties/currency"
                        },
                        "validFrom": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validFrom"
                        },
                        "validThrough": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validThrough"
                        },
                        "maxValue": {
                              "$ref": "http://supermodel.io/schemaorg/properties/maxValue"
                        },
                        "minValue": {
                              "$ref": "http://supermodel.io/schemaorg/properties/minValue"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/currency": {
                  "$id": "http://supermodel.io/schemaorg/properties/currency",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/currency",
                  "title": "currency",
                  "description": "The currency in which the monetary amount is expressed.<br/><br/>\n\nUse standard formats: <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO 4217 currency format</a> e.g. \"USD\"; <a href=\"https://en.wikipedia.org/wiki/List_of_cryptocurrencies\">Ticker symbol</a> for cryptocurrencies e.g. \"BTC\"; well known names for <a href=\"https://en.wikipedia.org/wiki/Local_exchange_trading_system\">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. \"Ithaca HOUR\".",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/PriceSpecification": {
                  "$id": "http://supermodel.io/schemaorg/PriceSpecification",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/PriceSpecification",
                  "title": "PriceSpecification",
                  "type": "object",
                  "description": "A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use <a class=\"localLink\" href=\"http://schema.org/MonetaryAmount\">MonetaryAmount</a> to describe independent amounts of money such as a salary, credit card limits, etc.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "minPrice": {
                              "$ref": "http://supermodel.io/schemaorg/properties/minPrice"
                        },
                        "eligibleTransactionVolume": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleTransactionVolume"
                        },
                        "maxPrice": {
                              "$ref": "http://supermodel.io/schemaorg/properties/maxPrice"
                        },
                        "priceCurrency": {
                              "$ref": "http://supermodel.io/schemaorg/properties/priceCurrency"
                        },
                        "eligibleQuantity": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleQuantity"
                        },
                        "validFrom": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validFrom"
                        },
                        "validThrough": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validThrough"
                        },
                        "price": {
                              "$ref": "http://supermodel.io/schemaorg/properties/price"
                        },
                        "valueAddedTaxIncluded": {
                              "$ref": "http://supermodel.io/schemaorg/properties/valueAddedTaxIncluded"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/minPrice": {
                  "$id": "http://supermodel.io/schemaorg/properties/minPrice",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/minPrice",
                  "title": "minPrice",
                  "description": "The lowest price if the price is a range.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/eligibleTransactionVolume": {
                  "$id": "http://supermodel.io/schemaorg/properties/eligibleTransactionVolume",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/eligibleTransactionVolume",
                  "title": "eligibleTransactionVolume",
                  "description": "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PriceSpecification"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/maxPrice": {
                  "$id": "http://supermodel.io/schemaorg/properties/maxPrice",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/maxPrice",
                  "title": "maxPrice",
                  "description": "The highest price if the price is a range.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/priceCurrency": {
                  "$id": "http://supermodel.io/schemaorg/properties/priceCurrency",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/priceCurrency",
                  "title": "priceCurrency",
                  "description": "The currency of the price, or a price component when attached to <a class=\"localLink\" href=\"http://schema.org/PriceSpecification\">PriceSpecification</a> and its subtypes.<br/><br/>\n\nUse standard formats: <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO 4217 currency format</a> e.g. \"USD\"; <a href=\"https://en.wikipedia.org/wiki/List_of_cryptocurrencies\">Ticker symbol</a> for cryptocurrencies e.g. \"BTC\"; well known names for <a href=\"https://en.wikipedia.org/wiki/Local_exchange_trading_system\">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. \"Ithaca HOUR\".",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/eligibleQuantity": {
                  "$id": "http://supermodel.io/schemaorg/properties/eligibleQuantity",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/eligibleQuantity",
                  "title": "eligibleQuantity",
                  "description": "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/price": {
                  "$id": "http://supermodel.io/schemaorg/properties/price",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/price",
                  "title": "price",
                  "description": "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.<br/><br/>\n\nUsage guidelines:<br/><br/>\n\n<ul>\n<li>Use the <a class=\"localLink\" href=\"http://schema.org/priceCurrency\">priceCurrency</a> property (with standard formats: <a href=\"http://en.wikipedia.org/wiki/ISO_4217\">ISO 4217 currency format</a> e.g. \"USD\"; <a href=\"https://en.wikipedia.org/wiki/List_of_cryptocurrencies\">Ticker symbol</a> for cryptocurrencies e.g. \"BTC\"; well known names for <a href=\"https://en.wikipedia.org/wiki/Local_exchange_trading_system\">Local Exchange Tradings Systems</a> (LETS) and other currency types e.g. \"Ithaca HOUR\") instead of including <a href=\"http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign\">ambiguous symbols</a> such as '$' in the value.</li>\n<li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.</li>\n<li>Note that both <a href=\"http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute\">RDFa</a> and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.</li>\n<li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode symbols.</li>\n</ul>\n",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/valueAddedTaxIncluded": {
                  "$id": "http://supermodel.io/schemaorg/properties/valueAddedTaxIncluded",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/valueAddedTaxIncluded",
                  "title": "valueAddedTaxIncluded",
                  "description": "Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Boolean"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/jobTitle": {
                  "$id": "http://supermodel.io/schemaorg/properties/jobTitle",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/jobTitle",
                  "title": "jobTitle",
                  "description": "The job title of the person (for example, Financial Manager).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/hasOfferCatalog": {
                  "$id": "http://supermodel.io/schemaorg/properties/hasOfferCatalog",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/hasOfferCatalog",
                  "title": "hasOfferCatalog",
                  "description": "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/OfferCatalog"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/OfferCatalog": {
                  "$id": "http://supermodel.io/schemaorg/OfferCatalog",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/OfferCatalog",
                  "title": "OfferCatalog",
                  "description": "An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ItemList"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/ItemList": {
                  "$id": "http://supermodel.io/schemaorg/ItemList",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ItemList",
                  "title": "ItemList",
                  "type": "object",
                  "description": "A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "itemListElement": {
                              "$ref": "http://supermodel.io/schemaorg/properties/itemListElement"
                        },
                        "itemListOrder": {
                              "$ref": "http://supermodel.io/schemaorg/properties/itemListOrder"
                        },
                        "numberOfItems": {
                              "$ref": "http://supermodel.io/schemaorg/properties/numberOfItems"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/itemListElement": {
                  "$id": "http://supermodel.io/schemaorg/properties/itemListElement",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/itemListElement",
                  "title": "itemListElement",
                  "description": "For itemListElement values, you can use simple strings (e.g. \"Peter\", \"Paul\", \"Mary\"), existing entities, or use ListItem.<br/><br/>\n\nText values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.<br/><br/>\n\nNote: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/ListItem"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/ListItem": {
                  "$id": "http://supermodel.io/schemaorg/ListItem",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ListItem",
                  "title": "ListItem",
                  "type": "object",
                  "description": "An list item, e.g. a step in a checklist or how-to description.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "nextItem": {
                              "$ref": "http://supermodel.io/schemaorg/properties/nextItem"
                        },
                        "position": {
                              "$ref": "http://supermodel.io/schemaorg/properties/position"
                        },
                        "previousItem": {
                              "$ref": "http://supermodel.io/schemaorg/properties/previousItem"
                        },
                        "item": {
                              "$ref": "http://supermodel.io/schemaorg/properties/item"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/nextItem": {
                  "$id": "http://supermodel.io/schemaorg/properties/nextItem",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/nextItem",
                  "title": "nextItem",
                  "description": "A link to the ListItem that follows the current one.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ListItem"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/position": {
                  "$id": "http://supermodel.io/schemaorg/properties/position",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/position",
                  "title": "position",
                  "description": "The position of an item in a series or sequence of items.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Integer": {
                  "$id": "http://supermodel.io/schemaorg/Integer",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Integer",
                  "title": "Integer",
                  "description": "Data type: Integer.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/previousItem": {
                  "$id": "http://supermodel.io/schemaorg/properties/previousItem",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/previousItem",
                  "title": "previousItem",
                  "description": "A link to the ListItem that preceeds the current one.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ListItem"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/item": {
                  "$id": "http://supermodel.io/schemaorg/properties/item",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/item",
                  "title": "item",
                  "description": "An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists')\u2019.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/itemListOrder": {
                  "$id": "http://supermodel.io/schemaorg/properties/itemListOrder",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/itemListOrder",
                  "title": "itemListOrder",
                  "description": "Type of ordering (e.g. Ascending, Descending, Unordered).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/ItemListOrderType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/ItemListOrderType": {
                  "$id": "http://supermodel.io/schemaorg/ItemListOrderType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ItemListOrderType",
                  "title": "ItemListOrderType",
                  "type": "string",
                  "description": "Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.",
                  "enum": [
                        "ItemListOrderDescending",
                        "ItemListUnordered",
                        "ItemListOrderAscending"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/numberOfItems": {
                  "$id": "http://supermodel.io/schemaorg/properties/numberOfItems",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/numberOfItems",
                  "title": "numberOfItems",
                  "description": "The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/deathPlace": {
                  "$id": "http://supermodel.io/schemaorg/properties/deathPlace",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/deathPlace",
                  "title": "deathPlace",
                  "description": "The place where the person died.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/globalLocationNumber": {
                  "$id": "http://supermodel.io/schemaorg/properties/globalLocationNumber",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/globalLocationNumber",
                  "title": "globalLocationNumber",
                  "description": "The <a href=\"http://www.gs1.org/gln\">Global Location Number</a> (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/birthPlace": {
                  "$id": "http://supermodel.io/schemaorg/properties/birthPlace",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/birthPlace",
                  "title": "birthPlace",
                  "description": "The place where the person was born.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/gender": {
                  "$id": "http://supermodel.io/schemaorg/properties/gender",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/gender",
                  "title": "gender",
                  "description": "Gender of the person. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/GenderType"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/GenderType": {
                  "$id": "http://supermodel.io/schemaorg/GenderType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/GenderType",
                  "title": "GenderType",
                  "type": "string",
                  "description": "An enumeration of genders.",
                  "enum": [
                        "Male",
                        "Female"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/alumniOf": {
                  "$id": "http://supermodel.io/schemaorg/properties/alumniOf",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/alumniOf",
                  "title": "alumniOf",
                  "description": "An organization that the person is an alumni of.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/EducationalOrganization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/EducationalOrganization": {
                  "$id": "http://supermodel.io/schemaorg/EducationalOrganization",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/EducationalOrganization",
                  "title": "EducationalOrganization",
                  "type": "object",
                  "description": "An educational organization.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ],
                  "properties": {
                        "alumni": {
                              "$ref": "http://supermodel.io/schemaorg/properties/alumni"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/alumni": {
                  "$id": "http://supermodel.io/schemaorg/properties/alumni",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/alumni",
                  "title": "alumni",
                  "description": "Alumni of an organization.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/homeLocation": {
                  "$id": "http://supermodel.io/schemaorg/properties/homeLocation",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/homeLocation",
                  "title": "homeLocation",
                  "description": "A contact location for a person's residence.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/ContactPoint"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/duns": {
                  "$id": "http://supermodel.io/schemaorg/properties/duns",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/duns",
                  "title": "duns",
                  "description": "The Dun &amp; Bradstreet DUNS number for identifying an organization or business person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/taxID": {
                  "$id": "http://supermodel.io/schemaorg/properties/taxID",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/taxID",
                  "title": "taxID",
                  "description": "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/award": {
                  "$id": "http://supermodel.io/schemaorg/properties/award",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/award",
                  "title": "award",
                  "description": "An award won by or for this item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/birthDate": {
                  "$id": "http://supermodel.io/schemaorg/properties/birthDate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/birthDate",
                  "title": "birthDate",
                  "description": "Date of birth.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/makesOffer": {
                  "$id": "http://supermodel.io/schemaorg/properties/makesOffer",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/makesOffer",
                  "title": "makesOffer",
                  "description": "A pointer to products or services offered by the organization or person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Offer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Offer": {
                  "$id": "http://supermodel.io/schemaorg/Offer",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Offer",
                  "title": "Offer",
                  "type": "object",
                  "description": "An offer to transfer some rights to an item or to provide a service \u2014 for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.<br/><br/>\n\nFor <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GTIN</a>-related fields, see <a href=\"http://www.gs1.org/barcodes/support/check_digit_calculator\">Check Digit calculator</a> and <a href=\"http://www.gs1us.org/resources/standards/gtin-validation-guide\">validation guide</a> from <a href=\"http://www.gs1.org/\">GS1</a>.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "sku": {
                              "$ref": "http://supermodel.io/schemaorg/properties/sku"
                        },
                        "availabilityStarts": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availabilityStarts"
                        },
                        "availableDeliveryMethod": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availableDeliveryMethod"
                        },
                        "areaServed": {
                              "$ref": "http://supermodel.io/schemaorg/properties/areaServed"
                        },
                        "mpn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/mpn"
                        },
                        "serialNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/serialNumber"
                        },
                        "ineligibleRegion": {
                              "$ref": "http://supermodel.io/schemaorg/properties/ineligibleRegion"
                        },
                        "gtin8": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin8"
                        },
                        "reviews": {
                              "$ref": "http://supermodel.io/schemaorg/properties/reviews"
                        },
                        "availability": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availability"
                        },
                        "priceSpecification": {
                              "$ref": "http://supermodel.io/schemaorg/properties/priceSpecification"
                        },
                        "inventoryLevel": {
                              "$ref": "http://supermodel.io/schemaorg/properties/inventoryLevel"
                        },
                        "aggregateRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating"
                        },
                        "eligibleTransactionVolume": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleTransactionVolume"
                        },
                        "availableAtOrFrom": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availableAtOrFrom"
                        },
                        "priceCurrency": {
                              "$ref": "http://supermodel.io/schemaorg/properties/priceCurrency"
                        },
                        "category": {
                              "$ref": "http://supermodel.io/schemaorg/properties/category"
                        },
                        "priceValidUntil": {
                              "$ref": "http://supermodel.io/schemaorg/properties/priceValidUntil"
                        },
                        "addOn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/addOn"
                        },
                        "warranty": {
                              "$ref": "http://supermodel.io/schemaorg/properties/warranty"
                        },
                        "includesObject": {
                              "$ref": "http://supermodel.io/schemaorg/properties/includesObject"
                        },
                        "eligibleQuantity": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleQuantity"
                        },
                        "validFrom": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validFrom"
                        },
                        "advanceBookingRequirement": {
                              "$ref": "http://supermodel.io/schemaorg/properties/advanceBookingRequirement"
                        },
                        "validThrough": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validThrough"
                        },
                        "price": {
                              "$ref": "http://supermodel.io/schemaorg/properties/price"
                        },
                        "gtin14": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin14"
                        },
                        "gtin13": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin13"
                        },
                        "gtin12": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin12"
                        },
                        "seller": {
                              "$ref": "http://supermodel.io/schemaorg/properties/seller"
                        },
                        "deliveryLeadTime": {
                              "$ref": "http://supermodel.io/schemaorg/properties/deliveryLeadTime"
                        },
                        "availabilityEnds": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availabilityEnds"
                        },
                        "review": {
                              "$ref": "http://supermodel.io/schemaorg/properties/review"
                        },
                        "businessFunction": {
                              "$ref": "http://supermodel.io/schemaorg/properties/businessFunction"
                        },
                        "eligibleCustomerType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleCustomerType"
                        },
                        "itemCondition": {
                              "$ref": "http://supermodel.io/schemaorg/properties/itemCondition"
                        },
                        "itemOffered": {
                              "$ref": "http://supermodel.io/schemaorg/properties/itemOffered"
                        },
                        "offeredBy": {
                              "$ref": "http://supermodel.io/schemaorg/properties/offeredBy"
                        },
                        "eligibleDuration": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleDuration"
                        },
                        "acceptedPaymentMethod": {
                              "$ref": "http://supermodel.io/schemaorg/properties/acceptedPaymentMethod"
                        },
                        "eligibleRegion": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleRegion"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/sku": {
                  "$id": "http://supermodel.io/schemaorg/properties/sku",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/sku",
                  "title": "sku",
                  "description": "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/availabilityStarts": {
                  "$id": "http://supermodel.io/schemaorg/properties/availabilityStarts",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/availabilityStarts",
                  "title": "availabilityStarts",
                  "description": "The beginning of the availability of the product or service included in the offer.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/availableDeliveryMethod": {
                  "$id": "http://supermodel.io/schemaorg/properties/availableDeliveryMethod",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/availableDeliveryMethod",
                  "title": "availableDeliveryMethod",
                  "description": "The delivery method(s) available for this offer.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DeliveryMethod"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/DeliveryMethod": {
                  "$id": "http://supermodel.io/schemaorg/DeliveryMethod",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/DeliveryMethod",
                  "title": "DeliveryMethod",
                  "type": "string",
                  "description": "A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.<br/><br/>\n\nCommonly used values:<br/><br/>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#DeliveryModeDirectDownload</li>\n<li>http://purl.org/goodrelations/v1#DeliveryModeFreight</li>\n<li>http://purl.org/goodrelations/v1#DeliveryModeMail</li>\n<li>http://purl.org/goodrelations/v1#DeliveryModeOwnFleet</li>\n<li>http://purl.org/goodrelations/v1#DeliveryModePickUp</li>\n<li>http://purl.org/goodrelations/v1#DHL</li>\n<li>http://purl.org/goodrelations/v1#FederalExpress</li>\n<li>http://purl.org/goodrelations/v1#UPS</li>\n</ul>\n",
                  "enum": [
                        "OnSitePickup"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/mpn": {
                  "$id": "http://supermodel.io/schemaorg/properties/mpn",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/mpn",
                  "title": "mpn",
                  "description": "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/serialNumber": {
                  "$id": "http://supermodel.io/schemaorg/properties/serialNumber",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/serialNumber",
                  "title": "serialNumber",
                  "description": "The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/ineligibleRegion": {
                  "$id": "http://supermodel.io/schemaorg/properties/ineligibleRegion",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ineligibleRegion",
                  "title": "ineligibleRegion",
                  "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.<br/><br/>\n\nSee also <a class=\"localLink\" href=\"http://schema.org/eligibleRegion\">eligibleRegion</a>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/GeoShape"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/gtin8": {
                  "$id": "http://supermodel.io/schemaorg/properties/gtin8",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/gtin8",
                  "title": "gtin8",
                  "description": "The <a href=\"http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx\">GTIN-8</a> code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/reviews": {
                  "$id": "http://supermodel.io/schemaorg/properties/reviews",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/reviews",
                  "title": "reviews",
                  "description": "Review of the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Review"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Review": {
                  "$id": "http://supermodel.io/schemaorg/Review",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Review",
                  "title": "Review",
                  "type": "object",
                  "description": "A review of an item - for example, of a restaurant, movie, or store.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "reviewRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/reviewRating"
                        },
                        "itemReviewed": {
                              "$ref": "http://supermodel.io/schemaorg/properties/itemReviewed"
                        },
                        "reviewBody": {
                              "$ref": "http://supermodel.io/schemaorg/properties/reviewBody"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/reviewRating": {
                  "$id": "http://supermodel.io/schemaorg/properties/reviewRating",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/reviewRating",
                  "title": "reviewRating",
                  "description": "The rating given in this review. Note that reviews can themselves be rated. The <code>reviewRating</code> applies to rating given by the review. The <a class=\"localLink\" href=\"http://schema.org/aggregateRating\">aggregateRating</a> property applies to the review itself, as a creative work.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Rating"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Rating": {
                  "$id": "http://supermodel.io/schemaorg/Rating",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Rating",
                  "title": "Rating",
                  "type": "object",
                  "description": "A rating is an evaluation on a numeric scale, such as 1 to 5 stars.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "ratingValue": {
                              "$ref": "http://supermodel.io/schemaorg/properties/ratingValue"
                        },
                        "bestRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/bestRating"
                        },
                        "author": {
                              "$ref": "http://supermodel.io/schemaorg/properties/author"
                        },
                        "worstRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/worstRating"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/ratingValue": {
                  "$id": "http://supermodel.io/schemaorg/properties/ratingValue",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ratingValue",
                  "title": "ratingValue",
                  "description": "The rating for the content.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/bestRating": {
                  "$id": "http://supermodel.io/schemaorg/properties/bestRating",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/bestRating",
                  "title": "bestRating",
                  "description": "The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/author": {
                  "$id": "http://supermodel.io/schemaorg/properties/author",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/author",
                  "title": "author",
                  "description": "The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/worstRating": {
                  "$id": "http://supermodel.io/schemaorg/properties/worstRating",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/worstRating",
                  "title": "worstRating",
                  "description": "The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/itemReviewed": {
                  "$id": "http://supermodel.io/schemaorg/properties/itemReviewed",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/itemReviewed",
                  "title": "itemReviewed",
                  "description": "The item that is being reviewed/rated.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/reviewBody": {
                  "$id": "http://supermodel.io/schemaorg/properties/reviewBody",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/reviewBody",
                  "title": "reviewBody",
                  "description": "The actual body of the review.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/availability": {
                  "$id": "http://supermodel.io/schemaorg/properties/availability",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/availability",
                  "title": "availability",
                  "description": "The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ItemAvailability"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/ItemAvailability": {
                  "$id": "http://supermodel.io/schemaorg/ItemAvailability",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ItemAvailability",
                  "title": "ItemAvailability",
                  "type": "string",
                  "description": "A list of possible product availability options.",
                  "enum": [
                        "SoldOut",
                        "PreOrder",
                        "OutOfStock",
                        "PreSale",
                        "InStock",
                        "LimitedAvailability",
                        "Discontinued",
                        "OnlineOnly",
                        "InStoreOnly"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/priceSpecification": {
                  "$id": "http://supermodel.io/schemaorg/properties/priceSpecification",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/priceSpecification",
                  "title": "priceSpecification",
                  "description": "One or more detailed price specifications, indicating the unit price and delivery or payment charges.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PriceSpecification"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/inventoryLevel": {
                  "$id": "http://supermodel.io/schemaorg/properties/inventoryLevel",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/inventoryLevel",
                  "title": "inventoryLevel",
                  "description": "The current approximate inventory level for the item or items.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/aggregateRating": {
                  "$id": "http://supermodel.io/schemaorg/properties/aggregateRating",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/aggregateRating",
                  "title": "aggregateRating",
                  "description": "The overall rating, based on a collection of reviews or ratings, of the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/AggregateRating"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/AggregateRating": {
                  "$id": "http://supermodel.io/schemaorg/AggregateRating",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/AggregateRating",
                  "title": "AggregateRating",
                  "type": "object",
                  "description": "The average rating based on multiple ratings or reviews.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Rating"
                        }
                  ],
                  "properties": {
                        "itemReviewed": {
                              "$ref": "http://supermodel.io/schemaorg/properties/itemReviewed"
                        },
                        "reviewCount": {
                              "$ref": "http://supermodel.io/schemaorg/properties/reviewCount"
                        },
                        "ratingCount": {
                              "$ref": "http://supermodel.io/schemaorg/properties/ratingCount"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/reviewCount": {
                  "$id": "http://supermodel.io/schemaorg/properties/reviewCount",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/reviewCount",
                  "title": "reviewCount",
                  "description": "The count of total number of reviews.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/ratingCount": {
                  "$id": "http://supermodel.io/schemaorg/properties/ratingCount",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ratingCount",
                  "title": "ratingCount",
                  "description": "The count of total number of ratings.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/availableAtOrFrom": {
                  "$id": "http://supermodel.io/schemaorg/properties/availableAtOrFrom",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/availableAtOrFrom",
                  "title": "availableAtOrFrom",
                  "description": "The place(s) from which the offer can be obtained (e.g. store locations).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/category": {
                  "$id": "http://supermodel.io/schemaorg/properties/category",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/category",
                  "title": "category",
                  "description": "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/priceValidUntil": {
                  "$id": "http://supermodel.io/schemaorg/properties/priceValidUntil",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/priceValidUntil",
                  "title": "priceValidUntil",
                  "description": "The date after which the price is no longer available.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/addOn": {
                  "$id": "http://supermodel.io/schemaorg/properties/addOn",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/addOn",
                  "title": "addOn",
                  "description": "An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Offer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/warranty": {
                  "$id": "http://supermodel.io/schemaorg/properties/warranty",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/warranty",
                  "title": "warranty",
                  "description": "The warranty promise(s) included in the offer.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/WarrantyPromise"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/WarrantyPromise": {
                  "$id": "http://supermodel.io/schemaorg/WarrantyPromise",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/WarrantyPromise",
                  "title": "WarrantyPromise",
                  "type": "object",
                  "description": "A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "durationOfWarranty": {
                              "$ref": "http://supermodel.io/schemaorg/properties/durationOfWarranty"
                        },
                        "warrantyScope": {
                              "$ref": "http://supermodel.io/schemaorg/properties/warrantyScope"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/durationOfWarranty": {
                  "$id": "http://supermodel.io/schemaorg/properties/durationOfWarranty",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/durationOfWarranty",
                  "title": "durationOfWarranty",
                  "description": "The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/warrantyScope": {
                  "$id": "http://supermodel.io/schemaorg/properties/warrantyScope",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/warrantyScope",
                  "title": "warrantyScope",
                  "description": "The scope of the warranty promise.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/WarrantyScope"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/WarrantyScope": {
                  "$id": "http://supermodel.io/schemaorg/WarrantyScope",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/WarrantyScope",
                  "title": "WarrantyScope",
                  "type": "string",
                  "description": "A range of of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.<br/><br/>\n\nCommonly used values:<br/><br/>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#Labor-BringIn</li>\n<li>http://purl.org/goodrelations/v1#PartsAndLabor-BringIn</li>\n<li>http://purl.org/goodrelations/v1#PartsAndLabor-PickUp</li>\n</ul>\n"
            },
            "http://supermodel.io/schemaorg/properties/includesObject": {
                  "$id": "http://supermodel.io/schemaorg/properties/includesObject",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/includesObject",
                  "title": "includesObject",
                  "description": "This links to a node or nodes indicating the exact quantity of the products included in the offer.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/TypeAndQuantityNode"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/TypeAndQuantityNode": {
                  "$id": "http://supermodel.io/schemaorg/TypeAndQuantityNode",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/TypeAndQuantityNode",
                  "title": "TypeAndQuantityNode",
                  "type": "object",
                  "description": "A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "typeOfGood": {
                              "$ref": "http://supermodel.io/schemaorg/properties/typeOfGood"
                        },
                        "amountOfThisGood": {
                              "$ref": "http://supermodel.io/schemaorg/properties/amountOfThisGood"
                        },
                        "businessFunction": {
                              "$ref": "http://supermodel.io/schemaorg/properties/businessFunction"
                        },
                        "unitCode": {
                              "$ref": "http://supermodel.io/schemaorg/properties/unitCode"
                        },
                        "unitText": {
                              "$ref": "http://supermodel.io/schemaorg/properties/unitText"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/typeOfGood": {
                  "$id": "http://supermodel.io/schemaorg/properties/typeOfGood",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/typeOfGood",
                  "title": "typeOfGood",
                  "description": "The product that this structured value is referring to.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Service"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Service": {
                  "$id": "http://supermodel.io/schemaorg/Service",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Service",
                  "title": "Service",
                  "type": "object",
                  "description": "A service provided by an organization, e.g. delivery service, print services, etc.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "serviceArea": {
                              "$ref": "http://supermodel.io/schemaorg/properties/serviceArea"
                        },
                        "provider": {
                              "$ref": "http://supermodel.io/schemaorg/properties/provider"
                        },
                        "serviceAudience": {
                              "$ref": "http://supermodel.io/schemaorg/properties/serviceAudience"
                        },
                        "areaServed": {
                              "$ref": "http://supermodel.io/schemaorg/properties/areaServed"
                        },
                        "audience": {
                              "$ref": "http://supermodel.io/schemaorg/properties/audience"
                        },
                        "hasOfferCatalog": {
                              "$ref": "http://supermodel.io/schemaorg/properties/hasOfferCatalog"
                        },
                        "hoursAvailable": {
                              "$ref": "http://supermodel.io/schemaorg/properties/hoursAvailable"
                        },
                        "providerMobility": {
                              "$ref": "http://supermodel.io/schemaorg/properties/providerMobility"
                        },
                        "aggregateRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating"
                        },
                        "offers": {
                              "$ref": "http://supermodel.io/schemaorg/properties/offers"
                        },
                        "award": {
                              "$ref": "http://supermodel.io/schemaorg/properties/award"
                        },
                        "category": {
                              "$ref": "http://supermodel.io/schemaorg/properties/category"
                        },
                        "broker": {
                              "$ref": "http://supermodel.io/schemaorg/properties/broker"
                        },
                        "serviceOutput": {
                              "$ref": "http://supermodel.io/schemaorg/properties/serviceOutput"
                        },
                        "logo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/logo"
                        },
                        "isSimilarTo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isSimilarTo"
                        },
                        "isRelatedTo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isRelatedTo"
                        },
                        "availableChannel": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availableChannel"
                        },
                        "review": {
                              "$ref": "http://supermodel.io/schemaorg/properties/review"
                        },
                        "serviceType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/serviceType"
                        },
                        "produces": {
                              "$ref": "http://supermodel.io/schemaorg/properties/produces"
                        },
                        "brand": {
                              "$ref": "http://supermodel.io/schemaorg/properties/brand"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/provider": {
                  "$id": "http://supermodel.io/schemaorg/properties/provider",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/provider",
                  "title": "provider",
                  "description": "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/serviceAudience": {
                  "$id": "http://supermodel.io/schemaorg/properties/serviceAudience",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/serviceAudience",
                  "title": "serviceAudience",
                  "description": "The audience eligible for this service.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Audience"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Audience": {
                  "$id": "http://supermodel.io/schemaorg/Audience",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Audience",
                  "title": "Audience",
                  "type": "object",
                  "description": "Intended audience for an item, i.e. the group for whom the item was created.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "audienceType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/audienceType"
                        },
                        "geographicArea": {
                              "$ref": "http://supermodel.io/schemaorg/properties/geographicArea"
                        }
                  },
                  "enum": [
                        "Researcher"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/audienceType": {
                  "$id": "http://supermodel.io/schemaorg/properties/audienceType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/audienceType",
                  "title": "audienceType",
                  "description": "The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/geographicArea": {
                  "$id": "http://supermodel.io/schemaorg/properties/geographicArea",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/geographicArea",
                  "title": "geographicArea",
                  "description": "The geographic area associated with the audience.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/AdministrativeArea"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/audience": {
                  "$id": "http://supermodel.io/schemaorg/properties/audience",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/audience",
                  "title": "audience",
                  "description": "An intended audience, i.e. a group for whom something was created.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Audience"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/providerMobility": {
                  "$id": "http://supermodel.io/schemaorg/properties/providerMobility",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/providerMobility",
                  "title": "providerMobility",
                  "description": "Indicates the mobility of a provided service (e.g. 'static', 'dynamic').",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/offers": {
                  "$id": "http://supermodel.io/schemaorg/properties/offers",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/offers",
                  "title": "offers",
                  "description": "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Offer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/broker": {
                  "$id": "http://supermodel.io/schemaorg/properties/broker",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/broker",
                  "title": "broker",
                  "description": "An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/serviceOutput": {
                  "$id": "http://supermodel.io/schemaorg/properties/serviceOutput",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/serviceOutput",
                  "title": "serviceOutput",
                  "description": "The tangible thing generated by the service, e.g. a passport, permit, etc.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/logo": {
                  "$id": "http://supermodel.io/schemaorg/properties/logo",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/logo",
                  "title": "logo",
                  "description": "An associated logo.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/ImageObject"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isSimilarTo": {
                  "$id": "http://supermodel.io/schemaorg/properties/isSimilarTo",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isSimilarTo",
                  "title": "isSimilarTo",
                  "description": "A pointer to another, functionally similar product (or multiple products).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Service"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isRelatedTo": {
                  "$id": "http://supermodel.io/schemaorg/properties/isRelatedTo",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isRelatedTo",
                  "title": "isRelatedTo",
                  "description": "A pointer to another, somehow related product (or multiple products).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Service"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/availableChannel": {
                  "$id": "http://supermodel.io/schemaorg/properties/availableChannel",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/availableChannel",
                  "title": "availableChannel",
                  "description": "A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ServiceChannel"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/ServiceChannel": {
                  "$id": "http://supermodel.io/schemaorg/ServiceChannel",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ServiceChannel",
                  "title": "ServiceChannel",
                  "type": "object",
                  "description": "A means for accessing a service, e.g. a government office location, web site, or phone number.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "providesService": {
                              "$ref": "http://supermodel.io/schemaorg/properties/providesService"
                        },
                        "serviceLocation": {
                              "$ref": "http://supermodel.io/schemaorg/properties/serviceLocation"
                        },
                        "servicePostalAddress": {
                              "$ref": "http://supermodel.io/schemaorg/properties/servicePostalAddress"
                        },
                        "availableLanguage": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availableLanguage"
                        },
                        "serviceUrl": {
                              "$ref": "http://supermodel.io/schemaorg/properties/serviceUrl"
                        },
                        "servicePhone": {
                              "$ref": "http://supermodel.io/schemaorg/properties/servicePhone"
                        },
                        "serviceSmsNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/serviceSmsNumber"
                        },
                        "processingTime": {
                              "$ref": "http://supermodel.io/schemaorg/properties/processingTime"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/providesService": {
                  "$id": "http://supermodel.io/schemaorg/properties/providesService",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/providesService",
                  "title": "providesService",
                  "description": "The service provided by this channel.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Service"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/serviceLocation": {
                  "$id": "http://supermodel.io/schemaorg/properties/serviceLocation",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/serviceLocation",
                  "title": "serviceLocation",
                  "description": "The location (e.g. civic structure, local business, etc.) where a person can go to access the service.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/servicePostalAddress": {
                  "$id": "http://supermodel.io/schemaorg/properties/servicePostalAddress",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/servicePostalAddress",
                  "title": "servicePostalAddress",
                  "description": "The address for accessing the service by mail.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PostalAddress"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/serviceUrl": {
                  "$id": "http://supermodel.io/schemaorg/properties/serviceUrl",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/serviceUrl",
                  "title": "serviceUrl",
                  "description": "The website to access the service.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/servicePhone": {
                  "$id": "http://supermodel.io/schemaorg/properties/servicePhone",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/servicePhone",
                  "title": "servicePhone",
                  "description": "The phone number to use to access the service.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ContactPoint"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/serviceSmsNumber": {
                  "$id": "http://supermodel.io/schemaorg/properties/serviceSmsNumber",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/serviceSmsNumber",
                  "title": "serviceSmsNumber",
                  "description": "The number to access the service by text message.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ContactPoint"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/processingTime": {
                  "$id": "http://supermodel.io/schemaorg/properties/processingTime",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/processingTime",
                  "title": "processingTime",
                  "description": "Estimated processing time for the service using this channel.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Duration"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Duration": {
                  "$id": "http://supermodel.io/schemaorg/Duration",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Duration",
                  "title": "Duration",
                  "description": "Quantity: Duration (use <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 duration format</a>).",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Quantity"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/review": {
                  "$id": "http://supermodel.io/schemaorg/properties/review",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/review",
                  "title": "review",
                  "description": "A review of the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Review"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/serviceType": {
                  "$id": "http://supermodel.io/schemaorg/properties/serviceType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/serviceType",
                  "title": "serviceType",
                  "description": "The type of service being offered, e.g. veterans' benefits, emergency relief, etc.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/produces": {
                  "$id": "http://supermodel.io/schemaorg/properties/produces",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/produces",
                  "title": "produces",
                  "description": "The tangible thing generated by the service, e.g. a passport, permit, etc.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/brand": {
                  "$id": "http://supermodel.io/schemaorg/properties/brand",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/brand",
                  "title": "brand",
                  "description": "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Brand"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Brand": {
                  "$id": "http://supermodel.io/schemaorg/Brand",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Brand",
                  "title": "Brand",
                  "type": "object",
                  "description": "A brand is a name used by an organization or business person for labeling a product, product group, or similar.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "aggregateRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating"
                        },
                        "logo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/logo"
                        },
                        "review": {
                              "$ref": "http://supermodel.io/schemaorg/properties/review"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/amountOfThisGood": {
                  "$id": "http://supermodel.io/schemaorg/properties/amountOfThisGood",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/amountOfThisGood",
                  "title": "amountOfThisGood",
                  "description": "The quantity of the goods included in the offer.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/businessFunction": {
                  "$id": "http://supermodel.io/schemaorg/properties/businessFunction",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/businessFunction",
                  "title": "businessFunction",
                  "description": "The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/BusinessFunction"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/BusinessFunction": {
                  "$id": "http://supermodel.io/schemaorg/BusinessFunction",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/BusinessFunction",
                  "title": "BusinessFunction",
                  "type": "string",
                  "description": "The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.<br/><br/>\n\nCommonly used values:<br/><br/>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#ConstructionInstallation</li>\n<li>http://purl.org/goodrelations/v1#Dispose</li>\n<li>http://purl.org/goodrelations/v1#LeaseOut</li>\n<li>http://purl.org/goodrelations/v1#Maintain</li>\n<li>http://purl.org/goodrelations/v1#ProvideService</li>\n<li>http://purl.org/goodrelations/v1#Repair</li>\n<li>http://purl.org/goodrelations/v1#Sell</li>\n<li>http://purl.org/goodrelations/v1#Buy</li>\n</ul>\n"
            },
            "http://supermodel.io/schemaorg/properties/advanceBookingRequirement": {
                  "$id": "http://supermodel.io/schemaorg/properties/advanceBookingRequirement",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/advanceBookingRequirement",
                  "title": "advanceBookingRequirement",
                  "description": "The amount of time that is required between accepting the offer and the actual usage of the resource or service.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/gtin14": {
                  "$id": "http://supermodel.io/schemaorg/properties/gtin14",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/gtin14",
                  "title": "gtin14",
                  "description": "The GTIN-14 code of the product, or the product to which the offer refers. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/gtin13": {
                  "$id": "http://supermodel.io/schemaorg/properties/gtin13",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/gtin13",
                  "title": "gtin13",
                  "description": "The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceeding zero. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/gtin12": {
                  "$id": "http://supermodel.io/schemaorg/properties/gtin12",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/gtin12",
                  "title": "gtin12",
                  "description": "The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See <a href=\"http://www.gs1.org/barcodes/technical/idkeys/gtin\">GS1 GTIN Summary</a> for more details.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/seller": {
                  "$id": "http://supermodel.io/schemaorg/properties/seller",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/seller",
                  "title": "seller",
                  "description": "An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/deliveryLeadTime": {
                  "$id": "http://supermodel.io/schemaorg/properties/deliveryLeadTime",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/deliveryLeadTime",
                  "title": "deliveryLeadTime",
                  "description": "The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/availabilityEnds": {
                  "$id": "http://supermodel.io/schemaorg/properties/availabilityEnds",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/availabilityEnds",
                  "title": "availabilityEnds",
                  "description": "The end of the availability of the product or service included in the offer.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/eligibleCustomerType": {
                  "$id": "http://supermodel.io/schemaorg/properties/eligibleCustomerType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/eligibleCustomerType",
                  "title": "eligibleCustomerType",
                  "description": "The type(s) of customers for which the given offer is valid.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/BusinessEntityType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/BusinessEntityType": {
                  "$id": "http://supermodel.io/schemaorg/BusinessEntityType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/BusinessEntityType",
                  "title": "BusinessEntityType",
                  "type": "string",
                  "description": "A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.<br/><br/>\n\nCommonly used values:<br/><br/>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#Business</li>\n<li>http://purl.org/goodrelations/v1#Enduser</li>\n<li>http://purl.org/goodrelations/v1#PublicInstitution</li>\n<li>http://purl.org/goodrelations/v1#Reseller</li>\n</ul>\n"
            },
            "http://supermodel.io/schemaorg/properties/itemCondition": {
                  "$id": "http://supermodel.io/schemaorg/properties/itemCondition",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/itemCondition",
                  "title": "itemCondition",
                  "description": "A predefined value from OfferItemCondition or a textual description of the condition of the product or service, or the products or services included in the offer.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/OfferItemCondition"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/OfferItemCondition": {
                  "$id": "http://supermodel.io/schemaorg/OfferItemCondition",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/OfferItemCondition",
                  "title": "OfferItemCondition",
                  "type": "string",
                  "description": "A list of possible conditions for the item.",
                  "enum": [
                        "DamagedCondition",
                        "RefurbishedCondition",
                        "UsedCondition",
                        "NewCondition"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/itemOffered": {
                  "$id": "http://supermodel.io/schemaorg/properties/itemOffered",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/itemOffered",
                  "title": "itemOffered",
                  "description": "The item being offered.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Service"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/offeredBy": {
                  "$id": "http://supermodel.io/schemaorg/properties/offeredBy",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/offeredBy",
                  "title": "offeredBy",
                  "description": "A pointer to the organization or person making the offer.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/eligibleDuration": {
                  "$id": "http://supermodel.io/schemaorg/properties/eligibleDuration",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/eligibleDuration",
                  "title": "eligibleDuration",
                  "description": "The duration for which the given offer is valid.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/acceptedPaymentMethod": {
                  "$id": "http://supermodel.io/schemaorg/properties/acceptedPaymentMethod",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/acceptedPaymentMethod",
                  "title": "acceptedPaymentMethod",
                  "description": "The payment method(s) accepted by seller for this offer.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PaymentMethod"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/LoanOrCredit"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/PaymentMethod": {
                  "$id": "http://supermodel.io/schemaorg/PaymentMethod",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/PaymentMethod",
                  "title": "PaymentMethod",
                  "type": "string",
                  "description": "A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.<br/><br/>\n\nCommonly used values:<br/><br/>\n\n<ul>\n<li>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</li>\n<li>http://purl.org/goodrelations/v1#ByInvoice</li>\n<li>http://purl.org/goodrelations/v1#Cash</li>\n<li>http://purl.org/goodrelations/v1#CheckInAdvance</li>\n<li>http://purl.org/goodrelations/v1#COD</li>\n<li>http://purl.org/goodrelations/v1#DirectDebit</li>\n<li>http://purl.org/goodrelations/v1#GoogleCheckout</li>\n<li>http://purl.org/goodrelations/v1#PayPal</li>\n<li>http://purl.org/goodrelations/v1#PaySwarm</li>\n</ul>\n"
            },
            "http://supermodel.io/schemaorg/LoanOrCredit": {
                  "$id": "http://supermodel.io/schemaorg/LoanOrCredit",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/LoanOrCredit",
                  "title": "LoanOrCredit",
                  "type": "object",
                  "description": "A financial product for the loaning of an amount of money under agreed terms and charges.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/FinancialProduct"
                        }
                  ],
                  "properties": {
                        "loanTerm": {
                              "$ref": "http://supermodel.io/schemaorg/properties/loanTerm"
                        },
                        "amount": {
                              "$ref": "http://supermodel.io/schemaorg/properties/amount"
                        },
                        "requiredCollateral": {
                              "$ref": "http://supermodel.io/schemaorg/properties/requiredCollateral"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/loanTerm": {
                  "$id": "http://supermodel.io/schemaorg/properties/loanTerm",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/loanTerm",
                  "title": "loanTerm",
                  "description": "The duration of the loan or credit agreement.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/amount": {
                  "$id": "http://supermodel.io/schemaorg/properties/amount",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/amount",
                  "title": "amount",
                  "description": "The amount of money.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MonetaryAmount"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/requiredCollateral": {
                  "$id": "http://supermodel.io/schemaorg/properties/requiredCollateral",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/requiredCollateral",
                  "title": "requiredCollateral",
                  "description": "Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/FinancialProduct": {
                  "$id": "http://supermodel.io/schemaorg/FinancialProduct",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/FinancialProduct",
                  "title": "FinancialProduct",
                  "type": "object",
                  "description": "A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Service"
                        }
                  ],
                  "properties": {
                        "annualPercentageRate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/annualPercentageRate"
                        },
                        "interestRate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/interestRate"
                        },
                        "feesAndCommissionsSpecification": {
                              "$ref": "http://supermodel.io/schemaorg/properties/feesAndCommissionsSpecification"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/annualPercentageRate": {
                  "$id": "http://supermodel.io/schemaorg/properties/annualPercentageRate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/annualPercentageRate",
                  "title": "annualPercentageRate",
                  "description": "The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/interestRate": {
                  "$id": "http://supermodel.io/schemaorg/properties/interestRate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/interestRate",
                  "title": "interestRate",
                  "description": "The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/feesAndCommissionsSpecification": {
                  "$id": "http://supermodel.io/schemaorg/properties/feesAndCommissionsSpecification",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/feesAndCommissionsSpecification",
                  "title": "feesAndCommissionsSpecification",
                  "description": "Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/eligibleRegion": {
                  "$id": "http://supermodel.io/schemaorg/properties/eligibleRegion",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/eligibleRegion",
                  "title": "eligibleRegion",
                  "description": "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.<br/><br/>\n\nSee also <a class=\"localLink\" href=\"http://schema.org/ineligibleRegion\">ineligibleRegion</a>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/GeoShape"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/contactPoints": {
                  "$id": "http://supermodel.io/schemaorg/properties/contactPoints",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/contactPoints",
                  "title": "contactPoints",
                  "description": "A contact point for a person or organization.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ContactPoint"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/awards": {
                  "$id": "http://supermodel.io/schemaorg/properties/awards",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/awards",
                  "title": "awards",
                  "description": "Awards won by or for this item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/familyName": {
                  "$id": "http://supermodel.io/schemaorg/properties/familyName",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/familyName",
                  "title": "familyName",
                  "description": "Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/seeks": {
                  "$id": "http://supermodel.io/schemaorg/properties/seeks",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/seeks",
                  "title": "seeks",
                  "description": "A pointer to products or services sought by the organization or person (demand).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Demand"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Demand": {
                  "$id": "http://supermodel.io/schemaorg/Demand",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Demand",
                  "title": "Demand",
                  "type": "object",
                  "description": "A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "sku": {
                              "$ref": "http://supermodel.io/schemaorg/properties/sku"
                        },
                        "availabilityStarts": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availabilityStarts"
                        },
                        "availableDeliveryMethod": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availableDeliveryMethod"
                        },
                        "areaServed": {
                              "$ref": "http://supermodel.io/schemaorg/properties/areaServed"
                        },
                        "mpn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/mpn"
                        },
                        "serialNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/serialNumber"
                        },
                        "ineligibleRegion": {
                              "$ref": "http://supermodel.io/schemaorg/properties/ineligibleRegion"
                        },
                        "gtin8": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin8"
                        },
                        "availability": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availability"
                        },
                        "priceSpecification": {
                              "$ref": "http://supermodel.io/schemaorg/properties/priceSpecification"
                        },
                        "inventoryLevel": {
                              "$ref": "http://supermodel.io/schemaorg/properties/inventoryLevel"
                        },
                        "eligibleTransactionVolume": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleTransactionVolume"
                        },
                        "availableAtOrFrom": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availableAtOrFrom"
                        },
                        "warranty": {
                              "$ref": "http://supermodel.io/schemaorg/properties/warranty"
                        },
                        "includesObject": {
                              "$ref": "http://supermodel.io/schemaorg/properties/includesObject"
                        },
                        "eligibleQuantity": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleQuantity"
                        },
                        "validFrom": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validFrom"
                        },
                        "advanceBookingRequirement": {
                              "$ref": "http://supermodel.io/schemaorg/properties/advanceBookingRequirement"
                        },
                        "validThrough": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validThrough"
                        },
                        "gtin14": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin14"
                        },
                        "gtin13": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin13"
                        },
                        "gtin12": {
                              "$ref": "http://supermodel.io/schemaorg/properties/gtin12"
                        },
                        "seller": {
                              "$ref": "http://supermodel.io/schemaorg/properties/seller"
                        },
                        "deliveryLeadTime": {
                              "$ref": "http://supermodel.io/schemaorg/properties/deliveryLeadTime"
                        },
                        "availabilityEnds": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availabilityEnds"
                        },
                        "businessFunction": {
                              "$ref": "http://supermodel.io/schemaorg/properties/businessFunction"
                        },
                        "eligibleCustomerType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleCustomerType"
                        },
                        "itemCondition": {
                              "$ref": "http://supermodel.io/schemaorg/properties/itemCondition"
                        },
                        "itemOffered": {
                              "$ref": "http://supermodel.io/schemaorg/properties/itemOffered"
                        },
                        "eligibleDuration": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleDuration"
                        },
                        "acceptedPaymentMethod": {
                              "$ref": "http://supermodel.io/schemaorg/properties/acceptedPaymentMethod"
                        },
                        "eligibleRegion": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eligibleRegion"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/sibling": {
                  "$id": "http://supermodel.io/schemaorg/properties/sibling",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/sibling",
                  "title": "sibling",
                  "description": "A sibling of the person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/performerIn": {
                  "$id": "http://supermodel.io/schemaorg/properties/performerIn",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/performerIn",
                  "title": "performerIn",
                  "description": "Event that this person is a performer or participant in.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Event"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Event": {
                  "$id": "http://supermodel.io/schemaorg/Event",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Event",
                  "title": "Event",
                  "type": "object",
                  "description": "An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the <a class=\"localLink\" href=\"http://schema.org/offers\">offers</a> property. Repeated events may be structured as separate Event objects.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ],
                  "properties": {
                        "about": {
                              "$ref": "http://supermodel.io/schemaorg/properties/about"
                        },
                        "funder": {
                              "$ref": "http://supermodel.io/schemaorg/properties/funder"
                        },
                        "sponsor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/sponsor"
                        },
                        "workFeatured": {
                              "$ref": "http://supermodel.io/schemaorg/properties/workFeatured"
                        },
                        "audience": {
                              "$ref": "http://supermodel.io/schemaorg/properties/audience"
                        },
                        "remainingAttendeeCapacity": {
                              "$ref": "http://supermodel.io/schemaorg/properties/remainingAttendeeCapacity"
                        },
                        "actor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/actor"
                        },
                        "performers": {
                              "$ref": "http://supermodel.io/schemaorg/properties/performers"
                        },
                        "endDate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/endDate"
                        },
                        "doorTime": {
                              "$ref": "http://supermodel.io/schemaorg/properties/doorTime"
                        },
                        "contributor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contributor"
                        },
                        "maximumAttendeeCapacity": {
                              "$ref": "http://supermodel.io/schemaorg/properties/maximumAttendeeCapacity"
                        },
                        "typicalAgeRange": {
                              "$ref": "http://supermodel.io/schemaorg/properties/typicalAgeRange"
                        },
                        "organizer": {
                              "$ref": "http://supermodel.io/schemaorg/properties/organizer"
                        },
                        "attendees": {
                              "$ref": "http://supermodel.io/schemaorg/properties/attendees"
                        },
                        "aggregateRating": {
                              "$ref": "http://supermodel.io/schemaorg/properties/aggregateRating"
                        },
                        "subEvent": {
                              "$ref": "http://supermodel.io/schemaorg/properties/subEvent"
                        },
                        "subEvents": {
                              "$ref": "http://supermodel.io/schemaorg/properties/subEvents"
                        },
                        "offers": {
                              "$ref": "http://supermodel.io/schemaorg/properties/offers"
                        },
                        "attendee": {
                              "$ref": "http://supermodel.io/schemaorg/properties/attendee"
                        },
                        "workPerformed": {
                              "$ref": "http://supermodel.io/schemaorg/properties/workPerformed"
                        },
                        "eventStatus": {
                              "$ref": "http://supermodel.io/schemaorg/properties/eventStatus"
                        },
                        "startDate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/startDate"
                        },
                        "director": {
                              "$ref": "http://supermodel.io/schemaorg/properties/director"
                        },
                        "superEvent": {
                              "$ref": "http://supermodel.io/schemaorg/properties/superEvent"
                        },
                        "duration": {
                              "$ref": "http://supermodel.io/schemaorg/properties/duration"
                        },
                        "translator": {
                              "$ref": "http://supermodel.io/schemaorg/properties/translator"
                        },
                        "inLanguage": {
                              "$ref": "http://supermodel.io/schemaorg/properties/inLanguage"
                        },
                        "previousStartDate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/previousStartDate"
                        },
                        "review": {
                              "$ref": "http://supermodel.io/schemaorg/properties/review"
                        },
                        "location": {
                              "$ref": "http://supermodel.io/schemaorg/properties/location"
                        },
                        "recordedIn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/recordedIn"
                        },
                        "composer": {
                              "$ref": "http://supermodel.io/schemaorg/properties/composer"
                        },
                        "isAccessibleForFree": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isAccessibleForFree"
                        },
                        "performer": {
                              "$ref": "http://supermodel.io/schemaorg/properties/performer"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/workFeatured": {
                  "$id": "http://supermodel.io/schemaorg/properties/workFeatured",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/workFeatured",
                  "title": "workFeatured",
                  "description": "A work featured in some event, e.g. exhibited in an ExhibitionEvent.\n       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/remainingAttendeeCapacity": {
                  "$id": "http://supermodel.io/schemaorg/properties/remainingAttendeeCapacity",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/remainingAttendeeCapacity",
                  "title": "remainingAttendeeCapacity",
                  "description": "The number of attendee places for an event that remain unallocated.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/actor": {
                  "$id": "http://supermodel.io/schemaorg/properties/actor",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/actor",
                  "title": "actor",
                  "description": "An actor, e.g. in tv, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/performers": {
                  "$id": "http://supermodel.io/schemaorg/properties/performers",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/performers",
                  "title": "performers",
                  "description": "The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/endDate": {
                  "$id": "http://supermodel.io/schemaorg/properties/endDate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/endDate",
                  "title": "endDate",
                  "description": "The end date and time of the item (in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 date format</a>).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/doorTime": {
                  "$id": "http://supermodel.io/schemaorg/properties/doorTime",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/doorTime",
                  "title": "doorTime",
                  "description": "The time admission will commence.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/contributor": {
                  "$id": "http://supermodel.io/schemaorg/properties/contributor",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/contributor",
                  "title": "contributor",
                  "description": "A secondary contributor to the CreativeWork or Event.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/maximumAttendeeCapacity": {
                  "$id": "http://supermodel.io/schemaorg/properties/maximumAttendeeCapacity",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/maximumAttendeeCapacity",
                  "title": "maximumAttendeeCapacity",
                  "description": "The total number of individuals that may attend an event or venue.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/typicalAgeRange": {
                  "$id": "http://supermodel.io/schemaorg/properties/typicalAgeRange",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/typicalAgeRange",
                  "title": "typicalAgeRange",
                  "description": "The typical expected age range, e.g. '7-9', '11-'.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/organizer": {
                  "$id": "http://supermodel.io/schemaorg/properties/organizer",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/organizer",
                  "title": "organizer",
                  "description": "An organizer of an Event.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/attendees": {
                  "$id": "http://supermodel.io/schemaorg/properties/attendees",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/attendees",
                  "title": "attendees",
                  "description": "A person attending the event.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/subEvent": {
                  "$id": "http://supermodel.io/schemaorg/properties/subEvent",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/subEvent",
                  "title": "subEvent",
                  "description": "An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Event"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/subEvents": {
                  "$id": "http://supermodel.io/schemaorg/properties/subEvents",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/subEvents",
                  "title": "subEvents",
                  "description": "Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Event"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/attendee": {
                  "$id": "http://supermodel.io/schemaorg/properties/attendee",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/attendee",
                  "title": "attendee",
                  "description": "A person or organization attending the event.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/workPerformed": {
                  "$id": "http://supermodel.io/schemaorg/properties/workPerformed",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/workPerformed",
                  "title": "workPerformed",
                  "description": "A work performed in some event, for example a play performed in a TheaterEvent.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/eventStatus": {
                  "$id": "http://supermodel.io/schemaorg/properties/eventStatus",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/eventStatus",
                  "title": "eventStatus",
                  "description": "An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/EventStatusType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/EventStatusType": {
                  "$id": "http://supermodel.io/schemaorg/EventStatusType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/EventStatusType",
                  "title": "EventStatusType",
                  "type": "string",
                  "description": "EventStatusType is an enumeration type whose instances represent several states that an Event may be in.",
                  "enum": [
                        "EventPostponed",
                        "EventRescheduled",
                        "EventScheduled",
                        "EventCancelled"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/startDate": {
                  "$id": "http://supermodel.io/schemaorg/properties/startDate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/startDate",
                  "title": "startDate",
                  "description": "The start date and time of the item (in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 date format</a>).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/director": {
                  "$id": "http://supermodel.io/schemaorg/properties/director",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/director",
                  "title": "director",
                  "description": "A director of e.g. tv, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/superEvent": {
                  "$id": "http://supermodel.io/schemaorg/properties/superEvent",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/superEvent",
                  "title": "superEvent",
                  "description": "An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Event"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/duration": {
                  "$id": "http://supermodel.io/schemaorg/properties/duration",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/duration",
                  "title": "duration",
                  "description": "The duration of the item (movie, audio recording, event, etc.) in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 date format</a>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Duration"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/translator": {
                  "$id": "http://supermodel.io/schemaorg/properties/translator",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/translator",
                  "title": "translator",
                  "description": "Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/inLanguage": {
                  "$id": "http://supermodel.io/schemaorg/properties/inLanguage",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/inLanguage",
                  "title": "inLanguage",
                  "description": "The language of the content or performance or used in an action. Please use one of the language codes from the <a href=\"http://tools.ietf.org/html/bcp47\">IETF BCP 47 standard</a>. See also <a class=\"localLink\" href=\"http://schema.org/availableLanguage\">availableLanguage</a>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Language"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/previousStartDate": {
                  "$id": "http://supermodel.io/schemaorg/properties/previousStartDate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/previousStartDate",
                  "title": "previousStartDate",
                  "description": "Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/location": {
                  "$id": "http://supermodel.io/schemaorg/properties/location",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/location",
                  "title": "location",
                  "description": "The location of for example where the event is happening, an organization is located, or where an action takes place.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PostalAddress"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/recordedIn": {
                  "$id": "http://supermodel.io/schemaorg/properties/recordedIn",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/recordedIn",
                  "title": "recordedIn",
                  "description": "The CreativeWork that captured all or part of this Event.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/composer": {
                  "$id": "http://supermodel.io/schemaorg/properties/composer",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/composer",
                  "title": "composer",
                  "description": "The person or organization who wrote a composition, or who is the composer of a work performed at some event.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isAccessibleForFree": {
                  "$id": "http://supermodel.io/schemaorg/properties/isAccessibleForFree",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isAccessibleForFree",
                  "title": "isAccessibleForFree",
                  "description": "A flag to signal that the item, event, or place is accessible for free.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Boolean"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/performer": {
                  "$id": "http://supermodel.io/schemaorg/properties/performer",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/performer",
                  "title": "performer",
                  "description": "A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/honorificPrefix": {
                  "$id": "http://supermodel.io/schemaorg/properties/honorificPrefix",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/honorificPrefix",
                  "title": "honorificPrefix",
                  "description": "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/additionalName": {
                  "$id": "http://supermodel.io/schemaorg/properties/additionalName",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/additionalName",
                  "title": "additionalName",
                  "description": "An additional name for a Person, can be used for a middle name.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/siblings": {
                  "$id": "http://supermodel.io/schemaorg/properties/siblings",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/siblings",
                  "title": "siblings",
                  "description": "A sibling of the person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/weight": {
                  "$id": "http://supermodel.io/schemaorg/properties/weight",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/weight",
                  "title": "weight",
                  "description": "The weight of the product or person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/contactPoint": {
                  "$id": "http://supermodel.io/schemaorg/properties/contactPoint",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/contactPoint",
                  "title": "contactPoint",
                  "description": "A contact point for a person or organization.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ContactPoint"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/colleague": {
                  "$id": "http://supermodel.io/schemaorg/properties/colleague",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/colleague",
                  "title": "colleague",
                  "description": "A colleague of the person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/children": {
                  "$id": "http://supermodel.io/schemaorg/properties/children",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/children",
                  "title": "children",
                  "description": "A child of the person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/parents": {
                  "$id": "http://supermodel.io/schemaorg/properties/parents",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/parents",
                  "title": "parents",
                  "description": "A parents of the person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/givenName": {
                  "$id": "http://supermodel.io/schemaorg/properties/givenName",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/givenName",
                  "title": "givenName",
                  "description": "Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/naics": {
                  "$id": "http://supermodel.io/schemaorg/properties/naics",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/naics",
                  "title": "naics",
                  "description": "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/hasPOS": {
                  "$id": "http://supermodel.io/schemaorg/properties/hasPOS",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/hasPOS",
                  "title": "hasPOS",
                  "description": "Points-of-Sales operated by the organization or person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/parent": {
                  "$id": "http://supermodel.io/schemaorg/properties/parent",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/parent",
                  "title": "parent",
                  "description": "A parent of this person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/owns": {
                  "$id": "http://supermodel.io/schemaorg/properties/owns",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/owns",
                  "title": "owns",
                  "description": "Products owned by the organization or person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/OwnershipInfo"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/OwnershipInfo": {
                  "$id": "http://supermodel.io/schemaorg/OwnershipInfo",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/OwnershipInfo",
                  "title": "OwnershipInfo",
                  "type": "object",
                  "description": "A structured value providing information about when a certain organization or person owned a certain product.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "typeOfGood": {
                              "$ref": "http://supermodel.io/schemaorg/properties/typeOfGood"
                        },
                        "ownedFrom": {
                              "$ref": "http://supermodel.io/schemaorg/properties/ownedFrom"
                        },
                        "acquiredFrom": {
                              "$ref": "http://supermodel.io/schemaorg/properties/acquiredFrom"
                        },
                        "ownedThrough": {
                              "$ref": "http://supermodel.io/schemaorg/properties/ownedThrough"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/ownedFrom": {
                  "$id": "http://supermodel.io/schemaorg/properties/ownedFrom",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ownedFrom",
                  "title": "ownedFrom",
                  "description": "The date and time of obtaining the product.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/acquiredFrom": {
                  "$id": "http://supermodel.io/schemaorg/properties/acquiredFrom",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/acquiredFrom",
                  "title": "acquiredFrom",
                  "description": "The organization or person from which the product was acquired.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/ownedThrough": {
                  "$id": "http://supermodel.io/schemaorg/properties/ownedThrough",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ownedThrough",
                  "title": "ownedThrough",
                  "description": "The date and time of giving up ownership on the product.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/affiliation": {
                  "$id": "http://supermodel.io/schemaorg/properties/affiliation",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/affiliation",
                  "title": "affiliation",
                  "description": "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/publishingPrinciples": {
                  "$id": "http://supermodel.io/schemaorg/properties/publishingPrinciples",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/publishingPrinciples",
                  "title": "publishingPrinciples",
                  "description": "The publishingPrinciples property indicates (typically via <a class=\"localLink\" href=\"http://schema.org/URL\">URL</a>) a document describing the editorial principles of an <a class=\"localLink\" href=\"http://schema.org/Organization\">Organization</a> (or individual e.g. a <a class=\"localLink\" href=\"http://schema.org/Person\">Person</a> writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a <a class=\"localLink\" href=\"http://schema.org/CreativeWork\">CreativeWork</a> (e.g. <a class=\"localLink\" href=\"http://schema.org/NewsArticle\">NewsArticle</a>) the principles are those of the party primarily responsible for the creation of the <a class=\"localLink\" href=\"http://schema.org/CreativeWork\">CreativeWork</a>.<br/><br/>\n\nWhile such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a <a class=\"localLink\" href=\"http://schema.org/funder\">funder</a>) can be expressed using schema.org terminology.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isicV4": {
                  "$id": "http://supermodel.io/schemaorg/properties/isicV4",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isicV4",
                  "title": "isicV4",
                  "description": "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/honorificSuffix": {
                  "$id": "http://supermodel.io/schemaorg/properties/honorificSuffix",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/honorificSuffix",
                  "title": "honorificSuffix",
                  "description": "An honorific suffix preceding a Person's name such as M.D. /PhD/MSCSW.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/vatID": {
                  "$id": "http://supermodel.io/schemaorg/properties/vatID",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/vatID",
                  "title": "vatID",
                  "description": "The Value-added Tax ID of the organization or person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/nationality": {
                  "$id": "http://supermodel.io/schemaorg/properties/nationality",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/nationality",
                  "title": "nationality",
                  "description": "Nationality of the person.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Country"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/relatedTo": {
                  "$id": "http://supermodel.io/schemaorg/properties/relatedTo",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/relatedTo",
                  "title": "relatedTo",
                  "description": "The most generic familial relation.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/follows": {
                  "$id": "http://supermodel.io/schemaorg/properties/follows",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/follows",
                  "title": "follows",
                  "description": "The most generic uni-directional social relation.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/knows": {
                  "$id": "http://supermodel.io/schemaorg/properties/knows",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/knows",
                  "title": "knows",
                  "description": "The most generic bi-directional social/work relation.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/worksFor": {
                  "$id": "http://supermodel.io/schemaorg/properties/worksFor",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/worksFor",
                  "title": "worksFor",
                  "description": "Organizations that the person works for.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/member": {
                  "$id": "http://supermodel.io/schemaorg/properties/member",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/member",
                  "title": "member",
                  "description": "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/programName": {
                  "$id": "http://supermodel.io/schemaorg/properties/programName",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/programName",
                  "title": "programName",
                  "description": "The program providing the membership.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/hostingOrganization": {
                  "$id": "http://supermodel.io/schemaorg/properties/hostingOrganization",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/hostingOrganization",
                  "title": "hostingOrganization",
                  "description": "The organization (airline, travelers' club, etc.) the membership is made with.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/subOrganization": {
                  "$id": "http://supermodel.io/schemaorg/properties/subOrganization",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/subOrganization",
                  "title": "subOrganization",
                  "description": "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/leiCode": {
                  "$id": "http://supermodel.io/schemaorg/properties/leiCode",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/leiCode",
                  "title": "leiCode",
                  "description": "An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/founders": {
                  "$id": "http://supermodel.io/schemaorg/properties/founders",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/founders",
                  "title": "founders",
                  "description": "A person who founded this organization.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/dissolutionDate": {
                  "$id": "http://supermodel.io/schemaorg/properties/dissolutionDate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/dissolutionDate",
                  "title": "dissolutionDate",
                  "description": "The date that this organization was dissolved.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/events": {
                  "$id": "http://supermodel.io/schemaorg/properties/events",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/events",
                  "title": "events",
                  "description": "Upcoming or past events associated with this place or organization.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Event"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/employees": {
                  "$id": "http://supermodel.io/schemaorg/properties/employees",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/employees",
                  "title": "employees",
                  "description": "People working for this organization.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/department": {
                  "$id": "http://supermodel.io/schemaorg/properties/department",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/department",
                  "title": "department",
                  "description": "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/parentOrganization": {
                  "$id": "http://supermodel.io/schemaorg/properties/parentOrganization",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/parentOrganization",
                  "title": "parentOrganization",
                  "description": "The larger organization that this organization is a <a class=\"localLink\" href=\"http://schema.org/subOrganization\">subOrganization</a> of, if any.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/legalName": {
                  "$id": "http://supermodel.io/schemaorg/properties/legalName",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/legalName",
                  "title": "legalName",
                  "description": "The official name of the organization, e.g. the registered company name.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/foundingDate": {
                  "$id": "http://supermodel.io/schemaorg/properties/foundingDate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/foundingDate",
                  "title": "foundingDate",
                  "description": "The date that this organization was founded.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/employee": {
                  "$id": "http://supermodel.io/schemaorg/properties/employee",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/employee",
                  "title": "employee",
                  "description": "Someone working for this organization.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/numberOfEmployees": {
                  "$id": "http://supermodel.io/schemaorg/properties/numberOfEmployees",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/numberOfEmployees",
                  "title": "numberOfEmployees",
                  "description": "The number of employees in an organization e.g. business.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/foundingLocation": {
                  "$id": "http://supermodel.io/schemaorg/properties/foundingLocation",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/foundingLocation",
                  "title": "foundingLocation",
                  "description": "The place where the Organization was founded.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/event": {
                  "$id": "http://supermodel.io/schemaorg/properties/event",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/event",
                  "title": "event",
                  "description": "Upcoming or past event associated with this place, organization, or action.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Event"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/founder": {
                  "$id": "http://supermodel.io/schemaorg/properties/founder",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/founder",
                  "title": "founder",
                  "description": "A person who founded this organization.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/productionDate": {
                  "$id": "http://supermodel.io/schemaorg/properties/productionDate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/productionDate",
                  "title": "productionDate",
                  "description": "The date of production of the item, e.g. vehicle.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isConsumableFor": {
                  "$id": "http://supermodel.io/schemaorg/properties/isConsumableFor",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isConsumableFor",
                  "title": "isConsumableFor",
                  "description": "A pointer to another product (or multiple products) for which this product is a consumable.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/width": {
                  "$id": "http://supermodel.io/schemaorg/properties/width",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/width",
                  "title": "width",
                  "description": "The width of the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Distance"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isAccessoryOrSparePartFor": {
                  "$id": "http://supermodel.io/schemaorg/properties/isAccessoryOrSparePartFor",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isAccessoryOrSparePartFor",
                  "title": "isAccessoryOrSparePartFor",
                  "description": "A pointer to another product (or multiple products) for which this product is an accessory or spare part.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/material": {
                  "$id": "http://supermodel.io/schemaorg/properties/material",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/material",
                  "title": "material",
                  "description": "A material that something is made from, e.g. leather, wool, cotton, paper.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/model": {
                  "$id": "http://supermodel.io/schemaorg/properties/model",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/model",
                  "title": "model",
                  "description": "The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/ProductModel"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/ProductModel": {
                  "$id": "http://supermodel.io/schemaorg/ProductModel",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ProductModel",
                  "title": "ProductModel",
                  "type": "object",
                  "description": "A datasheet or vendor specification of a product (in the sense of a prototypical description).",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        }
                  ],
                  "properties": {
                        "predecessorOf": {
                              "$ref": "http://supermodel.io/schemaorg/properties/predecessorOf"
                        },
                        "successorOf": {
                              "$ref": "http://supermodel.io/schemaorg/properties/successorOf"
                        },
                        "isVariantOf": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isVariantOf"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/predecessorOf": {
                  "$id": "http://supermodel.io/schemaorg/properties/predecessorOf",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/predecessorOf",
                  "title": "predecessorOf",
                  "description": "A pointer from a previous, often discontinued variant of the product to its newer variant.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ProductModel"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/successorOf": {
                  "$id": "http://supermodel.io/schemaorg/properties/successorOf",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/successorOf",
                  "title": "successorOf",
                  "description": "A pointer from a newer variant of a product  to its previous, often discontinued predecessor.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ProductModel"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isVariantOf": {
                  "$id": "http://supermodel.io/schemaorg/properties/isVariantOf",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isVariantOf",
                  "title": "isVariantOf",
                  "description": "A pointer to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ProductModel"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/color": {
                  "$id": "http://supermodel.io/schemaorg/properties/color",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/color",
                  "title": "color",
                  "description": "The color of the product.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/productID": {
                  "$id": "http://supermodel.io/schemaorg/properties/productID",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/productID",
                  "title": "productID",
                  "description": "The product identifier, such as ISBN. For example: <code>meta itemprop=\"productID\" content=\"isbn:123-456-789\"</code>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/depth": {
                  "$id": "http://supermodel.io/schemaorg/properties/depth",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/depth",
                  "title": "depth",
                  "description": "The depth of the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/QuantitativeValue"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Distance"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/purchaseDate": {
                  "$id": "http://supermodel.io/schemaorg/properties/purchaseDate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/purchaseDate",
                  "title": "purchaseDate",
                  "description": "The date the item e.g. vehicle was purchased by the current owner.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/releaseDate": {
                  "$id": "http://supermodel.io/schemaorg/properties/releaseDate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/releaseDate",
                  "title": "releaseDate",
                  "description": "The release date of a product or product model. This can be used to distinguish the exact variant of a product.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/openingHoursSpecification": {
                  "$id": "http://supermodel.io/schemaorg/properties/openingHoursSpecification",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/openingHoursSpecification",
                  "title": "openingHoursSpecification",
                  "description": "The opening hours of a certain place.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/OpeningHoursSpecification"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/maps": {
                  "$id": "http://supermodel.io/schemaorg/properties/maps",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/maps",
                  "title": "maps",
                  "description": "A URL to a map of the place.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/smokingAllowed": {
                  "$id": "http://supermodel.io/schemaorg/properties/smokingAllowed",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/smokingAllowed",
                  "title": "smokingAllowed",
                  "description": "Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Boolean"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/photos": {
                  "$id": "http://supermodel.io/schemaorg/properties/photos",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/photos",
                  "title": "photos",
                  "description": "Photographs of this place.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ImageObject"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Photograph"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/map": {
                  "$id": "http://supermodel.io/schemaorg/properties/map",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/map",
                  "title": "map",
                  "description": "A URL to a map of the place.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/branchCode": {
                  "$id": "http://supermodel.io/schemaorg/properties/branchCode",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/branchCode",
                  "title": "branchCode",
                  "description": "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.<br/><br/>\n\nFor example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/hasMap": {
                  "$id": "http://supermodel.io/schemaorg/properties/hasMap",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/hasMap",
                  "title": "hasMap",
                  "description": "A URL to a map of the place.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Map"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Map": {
                  "$id": "http://supermodel.io/schemaorg/Map",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Map",
                  "title": "Map",
                  "type": "object",
                  "description": "A map.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "mapType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/mapType"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/mapType": {
                  "$id": "http://supermodel.io/schemaorg/properties/mapType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/mapType",
                  "title": "mapType",
                  "description": "Indicates the kind of Map, from the MapCategoryType Enumeration.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MapCategoryType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/MapCategoryType": {
                  "$id": "http://supermodel.io/schemaorg/MapCategoryType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MapCategoryType",
                  "title": "MapCategoryType",
                  "type": "string",
                  "description": "An enumeration of several kinds of Map.",
                  "enum": [
                        "ParkingMap",
                        "SeatingMap",
                        "VenueMap",
                        "TransitMap"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/specialOpeningHoursSpecification": {
                  "$id": "http://supermodel.io/schemaorg/properties/specialOpeningHoursSpecification",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/specialOpeningHoursSpecification",
                  "title": "specialOpeningHoursSpecification",
                  "description": "The special opening hours of a certain place.<br/><br/>\n\nUse this to explicitly override general opening hours brought in scope by <a class=\"localLink\" href=\"http://schema.org/openingHoursSpecification\">openingHoursSpecification</a> or <a class=\"localLink\" href=\"http://schema.org/openingHours\">openingHours</a>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/OpeningHoursSpecification"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/amenityFeature": {
                  "$id": "http://supermodel.io/schemaorg/properties/amenityFeature",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/amenityFeature",
                  "title": "amenityFeature",
                  "description": "An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/LocationFeatureSpecification"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/LocationFeatureSpecification": {
                  "$id": "http://supermodel.io/schemaorg/LocationFeatureSpecification",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/LocationFeatureSpecification",
                  "title": "LocationFeatureSpecification",
                  "type": "object",
                  "description": "Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PropertyValue"
                        }
                  ],
                  "properties": {
                        "hoursAvailable": {
                              "$ref": "http://supermodel.io/schemaorg/properties/hoursAvailable"
                        },
                        "validFrom": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validFrom"
                        },
                        "validThrough": {
                              "$ref": "http://supermodel.io/schemaorg/properties/validThrough"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/geo": {
                  "$id": "http://supermodel.io/schemaorg/properties/geo",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/geo",
                  "title": "geo",
                  "description": "The geo coordinates of the place.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/GeoCoordinates"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/GeoShape"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/GeoCoordinates": {
                  "$id": "http://supermodel.io/schemaorg/GeoCoordinates",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/GeoCoordinates",
                  "title": "GeoCoordinates",
                  "type": "object",
                  "description": "The geographic coordinates of a place or event.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "address": {
                              "$ref": "http://supermodel.io/schemaorg/properties/address"
                        },
                        "latitude": {
                              "$ref": "http://supermodel.io/schemaorg/properties/latitude"
                        },
                        "longitude": {
                              "$ref": "http://supermodel.io/schemaorg/properties/longitude"
                        },
                        "addressCountry": {
                              "$ref": "http://supermodel.io/schemaorg/properties/addressCountry"
                        },
                        "postalCode": {
                              "$ref": "http://supermodel.io/schemaorg/properties/postalCode"
                        },
                        "elevation": {
                              "$ref": "http://supermodel.io/schemaorg/properties/elevation"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/latitude": {
                  "$id": "http://supermodel.io/schemaorg/properties/latitude",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/latitude",
                  "title": "latitude",
                  "description": "The latitude of a location. For example <code>37.42242</code> (<a href=\"https://en.wikipedia.org/wiki/World_Geodetic_System\">WGS 84</a>).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/longitude": {
                  "$id": "http://supermodel.io/schemaorg/properties/longitude",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/longitude",
                  "title": "longitude",
                  "description": "The longitude of a location. For example <code>-122.08585</code> (<a href=\"https://en.wikipedia.org/wiki/World_Geodetic_System\">WGS 84</a>).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/containedInPlace": {
                  "$id": "http://supermodel.io/schemaorg/properties/containedInPlace",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/containedInPlace",
                  "title": "containedInPlace",
                  "description": "The basic containment relation between a place and one that contains it.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/containedIn": {
                  "$id": "http://supermodel.io/schemaorg/properties/containedIn",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/containedIn",
                  "title": "containedIn",
                  "description": "The basic containment relation between a place and one that contains it.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/containsPlace": {
                  "$id": "http://supermodel.io/schemaorg/properties/containsPlace",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/containsPlace",
                  "title": "containsPlace",
                  "description": "The basic containment relation between a place and another that it contains.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/publicAccess": {
                  "$id": "http://supermodel.io/schemaorg/properties/publicAccess",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/publicAccess",
                  "title": "publicAccess",
                  "description": "A flag to signal that the <a class=\"localLink\" href=\"http://schema.org/Place\">Place</a> is open to public visitors.  If this property is omitted there is no assumed default boolean value",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Boolean"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/contentSize": {
                  "$id": "http://supermodel.io/schemaorg/properties/contentSize",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/contentSize",
                  "title": "contentSize",
                  "description": "File size in (mega/kilo) bytes.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/embedUrl": {
                  "$id": "http://supermodel.io/schemaorg/properties/embedUrl",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/embedUrl",
                  "title": "embedUrl",
                  "description": "A URL pointing to a player for a specific video. In general, this is the information in the <code>src</code> element of an <code>embed</code> tag and should not be the same as the content of the <code>loc</code> tag.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/contentUrl": {
                  "$id": "http://supermodel.io/schemaorg/properties/contentUrl",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/contentUrl",
                  "title": "contentUrl",
                  "description": "Actual bytes of the media object, for example the image file or video file.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/associatedArticle": {
                  "$id": "http://supermodel.io/schemaorg/properties/associatedArticle",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/associatedArticle",
                  "title": "associatedArticle",
                  "description": "A NewsArticle associated with the Media Object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/NewsArticle"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/NewsArticle": {
                  "$id": "http://supermodel.io/schemaorg/NewsArticle",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/NewsArticle",
                  "title": "NewsArticle",
                  "type": "object",
                  "description": "A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.<br/><br/>\n\nA more detailed overview of <a href=\"/docs/news.html\">schema.org News markup</a> is also available.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Article"
                        }
                  ],
                  "properties": {
                        "printColumn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/printColumn"
                        },
                        "printEdition": {
                              "$ref": "http://supermodel.io/schemaorg/properties/printEdition"
                        },
                        "printSection": {
                              "$ref": "http://supermodel.io/schemaorg/properties/printSection"
                        },
                        "printPage": {
                              "$ref": "http://supermodel.io/schemaorg/properties/printPage"
                        },
                        "dateline": {
                              "$ref": "http://supermodel.io/schemaorg/properties/dateline"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/printColumn": {
                  "$id": "http://supermodel.io/schemaorg/properties/printColumn",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/printColumn",
                  "title": "printColumn",
                  "description": "The number of the column in which the NewsArticle appears in the print edition.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/printEdition": {
                  "$id": "http://supermodel.io/schemaorg/properties/printEdition",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/printEdition",
                  "title": "printEdition",
                  "description": "The edition of the print product in which the NewsArticle appears.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/printSection": {
                  "$id": "http://supermodel.io/schemaorg/properties/printSection",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/printSection",
                  "title": "printSection",
                  "description": "If this NewsArticle appears in print, this field indicates the print section in which the article appeared.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/printPage": {
                  "$id": "http://supermodel.io/schemaorg/properties/printPage",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/printPage",
                  "title": "printPage",
                  "description": "If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/dateline": {
                  "$id": "http://supermodel.io/schemaorg/properties/dateline",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/dateline",
                  "title": "dateline",
                  "description": "A <a href=\"https://en.wikipedia.org/wiki/Dateline\">dateline</a> is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.<br/><br/>\n\nStructured representations of dateline-related information can also be expressed more explicitly using <a class=\"localLink\" href=\"http://schema.org/locationCreated\">locationCreated</a> (which represents where a work was created e.g. where a news report was written).  For location depicted or described in the content, use <a class=\"localLink\" href=\"http://schema.org/contentLocation\">contentLocation</a>.<br/><br/>\n\nDateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: \"BEIRUT, Lebanon, June 2.\", \"Paris, France\", \"December 19, 2017 11:43AM Reporting from Washington\", \"Beijing/Moscow\", \"QUEZON CITY, Philippines\".",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Article": {
                  "$id": "http://supermodel.io/schemaorg/Article",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Article",
                  "title": "Article",
                  "type": "object",
                  "description": "An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.<br/><br/>\n\nSee also <a href=\"http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html\">blog post</a>.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "pagination": {
                              "$ref": "http://supermodel.io/schemaorg/properties/pagination"
                        },
                        "pageEnd": {
                              "$ref": "http://supermodel.io/schemaorg/properties/pageEnd"
                        },
                        "articleSection": {
                              "$ref": "http://supermodel.io/schemaorg/properties/articleSection"
                        },
                        "articleBody": {
                              "$ref": "http://supermodel.io/schemaorg/properties/articleBody"
                        },
                        "pageStart": {
                              "$ref": "http://supermodel.io/schemaorg/properties/pageStart"
                        },
                        "wordCount": {
                              "$ref": "http://supermodel.io/schemaorg/properties/wordCount"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/pagination": {
                  "$id": "http://supermodel.io/schemaorg/properties/pagination",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/pagination",
                  "title": "pagination",
                  "description": "Any description of pages that is not separated into pageStart and pageEnd; for example, \"1-6, 9, 55\" or \"10-12, 46-49\".",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/pageEnd": {
                  "$id": "http://supermodel.io/schemaorg/properties/pageEnd",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/pageEnd",
                  "title": "pageEnd",
                  "description": "The page on which the work ends; for example \"138\" or \"xvi\".",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/articleSection": {
                  "$id": "http://supermodel.io/schemaorg/properties/articleSection",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/articleSection",
                  "title": "articleSection",
                  "description": "Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/articleBody": {
                  "$id": "http://supermodel.io/schemaorg/properties/articleBody",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/articleBody",
                  "title": "articleBody",
                  "description": "The actual body of the article.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/pageStart": {
                  "$id": "http://supermodel.io/schemaorg/properties/pageStart",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/pageStart",
                  "title": "pageStart",
                  "description": "The page on which the work starts; for example \"135\" or \"xiii\".",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/wordCount": {
                  "$id": "http://supermodel.io/schemaorg/properties/wordCount",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/wordCount",
                  "title": "wordCount",
                  "description": "The number of words in the text of the Article.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/productionCompany": {
                  "$id": "http://supermodel.io/schemaorg/properties/productionCompany",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/productionCompany",
                  "title": "productionCompany",
                  "description": "The production company or studio responsible for the item e.g. series, video game, episode etc.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/encodesCreativeWork": {
                  "$id": "http://supermodel.io/schemaorg/properties/encodesCreativeWork",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/encodesCreativeWork",
                  "title": "encodesCreativeWork",
                  "description": "The CreativeWork encoded by this media object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/encodingFormat": {
                  "$id": "http://supermodel.io/schemaorg/properties/encodingFormat",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/encodingFormat",
                  "title": "encodingFormat",
                  "description": "Media type typically expressed using a MIME format (see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">IANA site</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\">MDN reference</a>) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).<br/><br/>\n\nIn cases where a <a class=\"localLink\" href=\"http://schema.org/CreativeWork\">CreativeWork</a> has several media type representations, <a class=\"localLink\" href=\"http://schema.org/encoding\">encoding</a> can be used to indicate each <a class=\"localLink\" href=\"http://schema.org/MediaObject\">MediaObject</a> alongside particular <a class=\"localLink\" href=\"http://schema.org/encodingFormat\">encodingFormat</a> information.<br/><br/>\n\nUnregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/additionalType": {
                  "$id": "http://supermodel.io/schemaorg/properties/additionalType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/additionalType",
                  "title": "additionalType",
                  "description": "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/name": {
                  "$id": "http://supermodel.io/schemaorg/properties/name",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/name",
                  "title": "name",
                  "description": "The name of the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/identifier": {
                  "$id": "http://supermodel.io/schemaorg/properties/identifier",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/identifier",
                  "title": "identifier",
                  "description": "The identifier property represents any kind of identifier for any kind of <a class=\"localLink\" href=\"http://schema.org/Thing\">Thing</a>, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See <a href=\"/docs/datamodel.html#identifierBg\">background notes</a> for more details.",
                  "anyOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PropertyValue"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/potentialAction": {
                  "$id": "http://supermodel.io/schemaorg/properties/potentialAction",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/potentialAction",
                  "title": "potentialAction",
                  "description": "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Action"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Action": {
                  "$id": "http://supermodel.io/schemaorg/Action",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Action",
                  "title": "Action",
                  "type": "object",
                  "description": "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.<br/><br/>\n\nSee also <a href=\"http://blog.schema.org/2014/04/announcing-schemaorg-actions.html\">blog post</a> and <a href=\"http://schema.org/docs/actions.html\">Actions overview document</a>.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ],
                  "properties": {
                        "result": {
                              "$ref": "http://supermodel.io/schemaorg/properties/result"
                        },
                        "startTime": {
                              "$ref": "http://supermodel.io/schemaorg/properties/startTime"
                        },
                        "actionStatus": {
                              "$ref": "http://supermodel.io/schemaorg/properties/actionStatus"
                        },
                        "target": {
                              "$ref": "http://supermodel.io/schemaorg/properties/target"
                        },
                        "agent": {
                              "$ref": "http://supermodel.io/schemaorg/properties/agent"
                        },
                        "endTime": {
                              "$ref": "http://supermodel.io/schemaorg/properties/endTime"
                        },
                        "instrument": {
                              "$ref": "http://supermodel.io/schemaorg/properties/instrument"
                        },
                        "participant": {
                              "$ref": "http://supermodel.io/schemaorg/properties/participant"
                        },
                        "object": {
                              "$ref": "http://supermodel.io/schemaorg/properties/object"
                        },
                        "error": {
                              "$ref": "http://supermodel.io/schemaorg/properties/error"
                        },
                        "location": {
                              "$ref": "http://supermodel.io/schemaorg/properties/location"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/result": {
                  "$id": "http://supermodel.io/schemaorg/properties/result",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/result",
                  "title": "result",
                  "description": "The result produced in the action. e.g. John wrote <em>a book</em>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/startTime": {
                  "$id": "http://supermodel.io/schemaorg/properties/startTime",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/startTime",
                  "title": "startTime",
                  "description": "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from <em>January</em> to December.<br/><br/>\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/actionStatus": {
                  "$id": "http://supermodel.io/schemaorg/properties/actionStatus",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/actionStatus",
                  "title": "actionStatus",
                  "description": "Indicates the current disposition of the Action.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ActionStatusType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/ActionStatusType": {
                  "$id": "http://supermodel.io/schemaorg/ActionStatusType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/ActionStatusType",
                  "title": "ActionStatusType",
                  "type": "string",
                  "description": "The status of an Action.",
                  "enum": [
                        "PotentialActionStatus",
                        "FailedActionStatus",
                        "CompletedActionStatus",
                        "ActiveActionStatus"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/target": {
                  "$id": "http://supermodel.io/schemaorg/properties/target",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/target",
                  "title": "target",
                  "description": "Indicates a target EntryPoint for an Action.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/EntryPoint"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/EntryPoint": {
                  "$id": "http://supermodel.io/schemaorg/EntryPoint",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/EntryPoint",
                  "title": "EntryPoint",
                  "type": "object",
                  "description": "An entry point, within some Web-based protocol.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "urlTemplate": {
                              "$ref": "http://supermodel.io/schemaorg/properties/urlTemplate"
                        },
                        "actionApplication": {
                              "$ref": "http://supermodel.io/schemaorg/properties/actionApplication"
                        },
                        "application": {
                              "$ref": "http://supermodel.io/schemaorg/properties/application"
                        },
                        "actionPlatform": {
                              "$ref": "http://supermodel.io/schemaorg/properties/actionPlatform"
                        },
                        "httpMethod": {
                              "$ref": "http://supermodel.io/schemaorg/properties/httpMethod"
                        },
                        "encodingType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/encodingType"
                        },
                        "contentType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/contentType"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/urlTemplate": {
                  "$id": "http://supermodel.io/schemaorg/properties/urlTemplate",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/urlTemplate",
                  "title": "urlTemplate",
                  "description": "An url template (RFC6570) that will be used to construct the target of the execution of the action.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/actionApplication": {
                  "$id": "http://supermodel.io/schemaorg/properties/actionApplication",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/actionApplication",
                  "title": "actionApplication",
                  "description": "An application that can complete the request.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/SoftwareApplication"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/SoftwareApplication": {
                  "$id": "http://supermodel.io/schemaorg/SoftwareApplication",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/SoftwareApplication",
                  "title": "SoftwareApplication",
                  "type": "object",
                  "description": "A software application.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "downloadUrl": {
                              "$ref": "http://supermodel.io/schemaorg/properties/downloadUrl"
                        },
                        "softwareRequirements": {
                              "$ref": "http://supermodel.io/schemaorg/properties/softwareRequirements"
                        },
                        "permissions": {
                              "$ref": "http://supermodel.io/schemaorg/properties/permissions"
                        },
                        "processorRequirements": {
                              "$ref": "http://supermodel.io/schemaorg/properties/processorRequirements"
                        },
                        "availableOnDevice": {
                              "$ref": "http://supermodel.io/schemaorg/properties/availableOnDevice"
                        },
                        "featureList": {
                              "$ref": "http://supermodel.io/schemaorg/properties/featureList"
                        },
                        "applicationSubCategory": {
                              "$ref": "http://supermodel.io/schemaorg/properties/applicationSubCategory"
                        },
                        "device": {
                              "$ref": "http://supermodel.io/schemaorg/properties/device"
                        },
                        "applicationCategory": {
                              "$ref": "http://supermodel.io/schemaorg/properties/applicationCategory"
                        },
                        "softwareVersion": {
                              "$ref": "http://supermodel.io/schemaorg/properties/softwareVersion"
                        },
                        "storageRequirements": {
                              "$ref": "http://supermodel.io/schemaorg/properties/storageRequirements"
                        },
                        "applicationSuite": {
                              "$ref": "http://supermodel.io/schemaorg/properties/applicationSuite"
                        },
                        "memoryRequirements": {
                              "$ref": "http://supermodel.io/schemaorg/properties/memoryRequirements"
                        },
                        "screenshot": {
                              "$ref": "http://supermodel.io/schemaorg/properties/screenshot"
                        },
                        "countriesSupported": {
                              "$ref": "http://supermodel.io/schemaorg/properties/countriesSupported"
                        },
                        "softwareHelp": {
                              "$ref": "http://supermodel.io/schemaorg/properties/softwareHelp"
                        },
                        "softwareAddOn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/softwareAddOn"
                        },
                        "releaseNotes": {
                              "$ref": "http://supermodel.io/schemaorg/properties/releaseNotes"
                        },
                        "supportingData": {
                              "$ref": "http://supermodel.io/schemaorg/properties/supportingData"
                        },
                        "requirements": {
                              "$ref": "http://supermodel.io/schemaorg/properties/requirements"
                        },
                        "countriesNotSupported": {
                              "$ref": "http://supermodel.io/schemaorg/properties/countriesNotSupported"
                        },
                        "operatingSystem": {
                              "$ref": "http://supermodel.io/schemaorg/properties/operatingSystem"
                        },
                        "fileSize": {
                              "$ref": "http://supermodel.io/schemaorg/properties/fileSize"
                        },
                        "installUrl": {
                              "$ref": "http://supermodel.io/schemaorg/properties/installUrl"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/downloadUrl": {
                  "$id": "http://supermodel.io/schemaorg/properties/downloadUrl",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/downloadUrl",
                  "title": "downloadUrl",
                  "description": "If the file can be downloaded, URL to download the binary.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/softwareRequirements": {
                  "$id": "http://supermodel.io/schemaorg/properties/softwareRequirements",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/softwareRequirements",
                  "title": "softwareRequirements",
                  "description": "Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/permissions": {
                  "$id": "http://supermodel.io/schemaorg/properties/permissions",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/permissions",
                  "title": "permissions",
                  "description": "Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/processorRequirements": {
                  "$id": "http://supermodel.io/schemaorg/properties/processorRequirements",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/processorRequirements",
                  "title": "processorRequirements",
                  "description": "Processor architecture required to run the application (e.g. IA64).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/availableOnDevice": {
                  "$id": "http://supermodel.io/schemaorg/properties/availableOnDevice",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/availableOnDevice",
                  "title": "availableOnDevice",
                  "description": "Device required to run the application. Used in cases where a specific make/model is required to run the application.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/featureList": {
                  "$id": "http://supermodel.io/schemaorg/properties/featureList",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/featureList",
                  "title": "featureList",
                  "description": "Features or modules provided by this application (and possibly required by other applications).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/applicationSubCategory": {
                  "$id": "http://supermodel.io/schemaorg/properties/applicationSubCategory",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/applicationSubCategory",
                  "title": "applicationSubCategory",
                  "description": "Subcategory of the application, e.g. 'Arcade Game'.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/device": {
                  "$id": "http://supermodel.io/schemaorg/properties/device",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/device",
                  "title": "device",
                  "description": "Device required to run the application. Used in cases where a specific make/model is required to run the application.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/applicationCategory": {
                  "$id": "http://supermodel.io/schemaorg/properties/applicationCategory",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/applicationCategory",
                  "title": "applicationCategory",
                  "description": "Type of software application, e.g. 'Game, Multimedia'.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/softwareVersion": {
                  "$id": "http://supermodel.io/schemaorg/properties/softwareVersion",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/softwareVersion",
                  "title": "softwareVersion",
                  "description": "Version of the software instance.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/storageRequirements": {
                  "$id": "http://supermodel.io/schemaorg/properties/storageRequirements",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/storageRequirements",
                  "title": "storageRequirements",
                  "description": "Storage requirements (free space required).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/applicationSuite": {
                  "$id": "http://supermodel.io/schemaorg/properties/applicationSuite",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/applicationSuite",
                  "title": "applicationSuite",
                  "description": "The name of the application suite to which the application belongs (e.g. Excel belongs to Office).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/memoryRequirements": {
                  "$id": "http://supermodel.io/schemaorg/properties/memoryRequirements",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/memoryRequirements",
                  "title": "memoryRequirements",
                  "description": "Minimum memory requirements.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/screenshot": {
                  "$id": "http://supermodel.io/schemaorg/properties/screenshot",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/screenshot",
                  "title": "screenshot",
                  "description": "A link to a screenshot image of the app.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/ImageObject"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/countriesSupported": {
                  "$id": "http://supermodel.io/schemaorg/properties/countriesSupported",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/countriesSupported",
                  "title": "countriesSupported",
                  "description": "Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/softwareHelp": {
                  "$id": "http://supermodel.io/schemaorg/properties/softwareHelp",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/softwareHelp",
                  "title": "softwareHelp",
                  "description": "Software application help.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/softwareAddOn": {
                  "$id": "http://supermodel.io/schemaorg/properties/softwareAddOn",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/softwareAddOn",
                  "title": "softwareAddOn",
                  "description": "Additional content for a software application.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/SoftwareApplication"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/releaseNotes": {
                  "$id": "http://supermodel.io/schemaorg/properties/releaseNotes",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/releaseNotes",
                  "title": "releaseNotes",
                  "description": "Description of what changed in this version.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/supportingData": {
                  "$id": "http://supermodel.io/schemaorg/properties/supportingData",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/supportingData",
                  "title": "supportingData",
                  "description": "Supporting data for a SoftwareApplication.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataFeed"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/DataFeed": {
                  "$id": "http://supermodel.io/schemaorg/DataFeed",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/DataFeed",
                  "title": "DataFeed",
                  "type": "object",
                  "description": "A single feed providing structured information about one or more entities or topics.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Dataset"
                        }
                  ],
                  "properties": {
                        "dataFeedElement": {
                              "$ref": "http://supermodel.io/schemaorg/properties/dataFeedElement"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/dataFeedElement": {
                  "$id": "http://supermodel.io/schemaorg/properties/dataFeedElement",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/dataFeedElement",
                  "title": "dataFeedElement",
                  "description": "An item within in a data feed. Data feeds may have many elements.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataFeedItem"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/DataFeedItem": {
                  "$id": "http://supermodel.io/schemaorg/DataFeedItem",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/DataFeedItem",
                  "title": "DataFeedItem",
                  "type": "object",
                  "description": "A single item within a larger data feed.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "dateModified": {
                              "$ref": "http://supermodel.io/schemaorg/properties/dateModified"
                        },
                        "dateDeleted": {
                              "$ref": "http://supermodel.io/schemaorg/properties/dateDeleted"
                        },
                        "dateCreated": {
                              "$ref": "http://supermodel.io/schemaorg/properties/dateCreated"
                        },
                        "item": {
                              "$ref": "http://supermodel.io/schemaorg/properties/item"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/dateModified": {
                  "$id": "http://supermodel.io/schemaorg/properties/dateModified",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/dateModified",
                  "title": "dateModified",
                  "description": "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/dateDeleted": {
                  "$id": "http://supermodel.io/schemaorg/properties/dateDeleted",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/dateDeleted",
                  "title": "dateDeleted",
                  "description": "The datetime the item was removed from the DataFeed.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/dateCreated": {
                  "$id": "http://supermodel.io/schemaorg/properties/dateCreated",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/dateCreated",
                  "title": "dateCreated",
                  "description": "The date on which the CreativeWork was created or the item was added to a DataFeed.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/requirements": {
                  "$id": "http://supermodel.io/schemaorg/properties/requirements",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/requirements",
                  "title": "requirements",
                  "description": "Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (Examples: DirectX, Java or .NET runtime).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/countriesNotSupported": {
                  "$id": "http://supermodel.io/schemaorg/properties/countriesNotSupported",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/countriesNotSupported",
                  "title": "countriesNotSupported",
                  "description": "Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/operatingSystem": {
                  "$id": "http://supermodel.io/schemaorg/properties/operatingSystem",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/operatingSystem",
                  "title": "operatingSystem",
                  "description": "Operating systems supported (Windows 7, OSX 10.6, Android 1.6).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/fileSize": {
                  "$id": "http://supermodel.io/schemaorg/properties/fileSize",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/fileSize",
                  "title": "fileSize",
                  "description": "Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/installUrl": {
                  "$id": "http://supermodel.io/schemaorg/properties/installUrl",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/installUrl",
                  "title": "installUrl",
                  "description": "URL at which the app may be installed, if different from the URL of the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/application": {
                  "$id": "http://supermodel.io/schemaorg/properties/application",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/application",
                  "title": "application",
                  "description": "An application that can complete the request.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/SoftwareApplication"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/actionPlatform": {
                  "$id": "http://supermodel.io/schemaorg/properties/actionPlatform",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/actionPlatform",
                  "title": "actionPlatform",
                  "description": "The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/httpMethod": {
                  "$id": "http://supermodel.io/schemaorg/properties/httpMethod",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/httpMethod",
                  "title": "httpMethod",
                  "description": "An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/encodingType": {
                  "$id": "http://supermodel.io/schemaorg/properties/encodingType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/encodingType",
                  "title": "encodingType",
                  "description": "The supported encoding type(s) for an EntryPoint request.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/contentType": {
                  "$id": "http://supermodel.io/schemaorg/properties/contentType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/contentType",
                  "title": "contentType",
                  "description": "The supported content type(s) for an EntryPoint response.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/agent": {
                  "$id": "http://supermodel.io/schemaorg/properties/agent",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/agent",
                  "title": "agent",
                  "description": "The direct performer or driver of the action (animate or inanimate). e.g. <em>John</em> wrote a book.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/endTime": {
                  "$id": "http://supermodel.io/schemaorg/properties/endTime",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/endTime",
                  "title": "endTime",
                  "description": "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to <em>December</em>.<br/><br/>\n\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/instrument": {
                  "$id": "http://supermodel.io/schemaorg/properties/instrument",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/instrument",
                  "title": "instrument",
                  "description": "The object that helped the agent perform the action. e.g. John wrote a book with <em>a pen</em>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/participant": {
                  "$id": "http://supermodel.io/schemaorg/properties/participant",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/participant",
                  "title": "participant",
                  "description": "Other co-agents that participated in the action indirectly. e.g. John wrote a book with <em>Steve</em>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/object": {
                  "$id": "http://supermodel.io/schemaorg/properties/object",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/object",
                  "title": "object",
                  "description": "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). e.g. John read <em>a book</em>.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/error": {
                  "$id": "http://supermodel.io/schemaorg/properties/error",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/error",
                  "title": "error",
                  "description": "For failed actions, more information on the cause of the failure.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/mainEntityOfPage": {
                  "$id": "http://supermodel.io/schemaorg/properties/mainEntityOfPage",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/mainEntityOfPage",
                  "title": "mainEntityOfPage",
                  "description": "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See <a href=\"/docs/datamodel.html#mainEntityBackground\">background notes</a> for details.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/description": {
                  "$id": "http://supermodel.io/schemaorg/properties/description",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/description",
                  "title": "description",
                  "description": "A description of the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/disambiguatingDescription": {
                  "$id": "http://supermodel.io/schemaorg/properties/disambiguatingDescription",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/disambiguatingDescription",
                  "title": "disambiguatingDescription",
                  "description": "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/alternateName": {
                  "$id": "http://supermodel.io/schemaorg/properties/alternateName",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/alternateName",
                  "title": "alternateName",
                  "description": "An alias for the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/accessibilitySummary": {
                  "$id": "http://supermodel.io/schemaorg/properties/accessibilitySummary",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/accessibilitySummary",
                  "title": "accessibilitySummary",
                  "description": "A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \"short descriptions are present but long descriptions will be needed for non-visual users\" or \"short descriptions are present and no long descriptions are needed.\"",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/educationalAlignment": {
                  "$id": "http://supermodel.io/schemaorg/properties/educationalAlignment",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/educationalAlignment",
                  "title": "educationalAlignment",
                  "description": "An alignment to an established educational framework.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/AlignmentObject"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/AlignmentObject": {
                  "$id": "http://supermodel.io/schemaorg/AlignmentObject",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/AlignmentObject",
                  "title": "AlignmentObject",
                  "type": "object",
                  "description": "An intangible item that describes an alignment between a learning resource and a node in an educational framework.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Intangible"
                        }
                  ],
                  "properties": {
                        "targetDescription": {
                              "$ref": "http://supermodel.io/schemaorg/properties/targetDescription"
                        },
                        "alignmentType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/alignmentType"
                        },
                        "targetUrl": {
                              "$ref": "http://supermodel.io/schemaorg/properties/targetUrl"
                        },
                        "targetName": {
                              "$ref": "http://supermodel.io/schemaorg/properties/targetName"
                        },
                        "educationalFramework": {
                              "$ref": "http://supermodel.io/schemaorg/properties/educationalFramework"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/targetDescription": {
                  "$id": "http://supermodel.io/schemaorg/properties/targetDescription",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/targetDescription",
                  "title": "targetDescription",
                  "description": "The description of a node in an established educational framework.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/alignmentType": {
                  "$id": "http://supermodel.io/schemaorg/properties/alignmentType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/alignmentType",
                  "title": "alignmentType",
                  "description": "A category of alignment between the learning resource and the framework node. Recommended values include: 'assesses', 'teaches', 'requires', 'textComplexity', 'readingLevel', 'educationalSubject', and 'educationalLevel'.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/targetUrl": {
                  "$id": "http://supermodel.io/schemaorg/properties/targetUrl",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/targetUrl",
                  "title": "targetUrl",
                  "description": "The URL of a node in an established educational framework.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/targetName": {
                  "$id": "http://supermodel.io/schemaorg/properties/targetName",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/targetName",
                  "title": "targetName",
                  "description": "The name of a node in an established educational framework.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/educationalFramework": {
                  "$id": "http://supermodel.io/schemaorg/properties/educationalFramework",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/educationalFramework",
                  "title": "educationalFramework",
                  "description": "The framework to which the resource being described is aligned.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/associatedMedia": {
                  "$id": "http://supermodel.io/schemaorg/properties/associatedMedia",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/associatedMedia",
                  "title": "associatedMedia",
                  "description": "A media object that encodes this CreativeWork. This property is a synonym for encoding.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MediaObject"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/audio": {
                  "$id": "http://supermodel.io/schemaorg/properties/audio",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/audio",
                  "title": "audio",
                  "description": "An embedded audio object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/AudioObject"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/AudioObject": {
                  "$id": "http://supermodel.io/schemaorg/AudioObject",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/AudioObject",
                  "title": "AudioObject",
                  "type": "object",
                  "description": "An audio file.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MediaObject"
                        }
                  ],
                  "properties": {
                        "transcript": {
                              "$ref": "http://supermodel.io/schemaorg/properties/transcript"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/transcript": {
                  "$id": "http://supermodel.io/schemaorg/properties/transcript",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/transcript",
                  "title": "transcript",
                  "description": "If this MediaObject is an AudioObject or VideoObject, the transcript of that object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/workExample": {
                  "$id": "http://supermodel.io/schemaorg/properties/workExample",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/workExample",
                  "title": "workExample",
                  "description": "Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/encoding": {
                  "$id": "http://supermodel.io/schemaorg/properties/encoding",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/encoding",
                  "title": "encoding",
                  "description": "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MediaObject"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/interactivityType": {
                  "$id": "http://supermodel.io/schemaorg/properties/interactivityType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/interactivityType",
                  "title": "interactivityType",
                  "description": "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/character": {
                  "$id": "http://supermodel.io/schemaorg/properties/character",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/character",
                  "title": "character",
                  "description": "Fictional person connected with a creative work.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/sourceOrganization": {
                  "$id": "http://supermodel.io/schemaorg/properties/sourceOrganization",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/sourceOrganization",
                  "title": "sourceOrganization",
                  "description": "The Organization on whose behalf the creator was working.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isPartOf": {
                  "$id": "http://supermodel.io/schemaorg/properties/isPartOf",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isPartOf",
                  "title": "isPartOf",
                  "description": "Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/video": {
                  "$id": "http://supermodel.io/schemaorg/properties/video",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/video",
                  "title": "video",
                  "description": "An embedded video object.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/VideoObject"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/VideoObject": {
                  "$id": "http://supermodel.io/schemaorg/VideoObject",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/VideoObject",
                  "title": "VideoObject",
                  "type": "object",
                  "description": "A video file.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MediaObject"
                        }
                  ],
                  "properties": {
                        "actor": {
                              "$ref": "http://supermodel.io/schemaorg/properties/actor"
                        },
                        "videoFrameSize": {
                              "$ref": "http://supermodel.io/schemaorg/properties/videoFrameSize"
                        },
                        "musicBy": {
                              "$ref": "http://supermodel.io/schemaorg/properties/musicBy"
                        },
                        "directors": {
                              "$ref": "http://supermodel.io/schemaorg/properties/directors"
                        },
                        "director": {
                              "$ref": "http://supermodel.io/schemaorg/properties/director"
                        },
                        "transcript": {
                              "$ref": "http://supermodel.io/schemaorg/properties/transcript"
                        },
                        "videoQuality": {
                              "$ref": "http://supermodel.io/schemaorg/properties/videoQuality"
                        },
                        "thumbnail": {
                              "$ref": "http://supermodel.io/schemaorg/properties/thumbnail"
                        },
                        "caption": {
                              "$ref": "http://supermodel.io/schemaorg/properties/caption"
                        },
                        "actors": {
                              "$ref": "http://supermodel.io/schemaorg/properties/actors"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/videoFrameSize": {
                  "$id": "http://supermodel.io/schemaorg/properties/videoFrameSize",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/videoFrameSize",
                  "title": "videoFrameSize",
                  "description": "The frame size of the video.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/musicBy": {
                  "$id": "http://supermodel.io/schemaorg/properties/musicBy",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/musicBy",
                  "title": "musicBy",
                  "description": "The composer of the soundtrack.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicGroup"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/MusicGroup": {
                  "$id": "http://supermodel.io/schemaorg/MusicGroup",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MusicGroup",
                  "title": "MusicGroup",
                  "type": "object",
                  "description": "A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PerformingGroup"
                        }
                  ],
                  "properties": {
                        "albums": {
                              "$ref": "http://supermodel.io/schemaorg/properties/albums"
                        },
                        "track": {
                              "$ref": "http://supermodel.io/schemaorg/properties/track"
                        },
                        "genre": {
                              "$ref": "http://supermodel.io/schemaorg/properties/genre"
                        },
                        "tracks": {
                              "$ref": "http://supermodel.io/schemaorg/properties/tracks"
                        },
                        "musicGroupMember": {
                              "$ref": "http://supermodel.io/schemaorg/properties/musicGroupMember"
                        },
                        "album": {
                              "$ref": "http://supermodel.io/schemaorg/properties/album"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/albums": {
                  "$id": "http://supermodel.io/schemaorg/properties/albums",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/albums",
                  "title": "albums",
                  "description": "A collection of music albums.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicAlbum"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/MusicAlbum": {
                  "$id": "http://supermodel.io/schemaorg/MusicAlbum",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MusicAlbum",
                  "title": "MusicAlbum",
                  "type": "object",
                  "description": "A collection of music tracks.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicPlaylist"
                        }
                  ],
                  "properties": {
                        "albumProductionType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/albumProductionType"
                        },
                        "albumReleaseType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/albumReleaseType"
                        },
                        "byArtist": {
                              "$ref": "http://supermodel.io/schemaorg/properties/byArtist"
                        },
                        "albumRelease": {
                              "$ref": "http://supermodel.io/schemaorg/properties/albumRelease"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/albumProductionType": {
                  "$id": "http://supermodel.io/schemaorg/properties/albumProductionType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/albumProductionType",
                  "title": "albumProductionType",
                  "description": "Classification of the album by it's type of content: soundtrack, live album, studio album, etc.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicAlbumProductionType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/MusicAlbumProductionType": {
                  "$id": "http://supermodel.io/schemaorg/MusicAlbumProductionType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MusicAlbumProductionType",
                  "title": "MusicAlbumProductionType",
                  "type": "string",
                  "description": "Classification of the album by it's type of content: soundtrack, live album, studio album, etc.",
                  "enum": [
                        "SoundtrackAlbum",
                        "RemixAlbum",
                        "DJMixAlbum",
                        "LiveAlbum",
                        "DemoAlbum",
                        "SpokenWordAlbum",
                        "CompilationAlbum",
                        "StudioAlbum",
                        "MixtapeAlbum"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/albumReleaseType": {
                  "$id": "http://supermodel.io/schemaorg/properties/albumReleaseType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/albumReleaseType",
                  "title": "albumReleaseType",
                  "description": "The kind of release which this album is: single, EP or album.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicAlbumReleaseType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/MusicAlbumReleaseType": {
                  "$id": "http://supermodel.io/schemaorg/MusicAlbumReleaseType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MusicAlbumReleaseType",
                  "title": "MusicAlbumReleaseType",
                  "type": "string",
                  "description": "The kind of release which this album is: single, EP or album.",
                  "enum": [
                        "AlbumRelease",
                        "EPRelease",
                        "BroadcastRelease",
                        "SingleRelease"
                  ]
            },
            "http://supermodel.io/schemaorg/properties/byArtist": {
                  "$id": "http://supermodel.io/schemaorg/properties/byArtist",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/byArtist",
                  "title": "byArtist",
                  "description": "The artist that performed this album or recording.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicGroup"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/albumRelease": {
                  "$id": "http://supermodel.io/schemaorg/properties/albumRelease",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/albumRelease",
                  "title": "albumRelease",
                  "description": "A release of this album.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicRelease"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/MusicRelease": {
                  "$id": "http://supermodel.io/schemaorg/MusicRelease",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MusicRelease",
                  "title": "MusicRelease",
                  "type": "object",
                  "description": "A MusicRelease is a specific release of a music album.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicPlaylist"
                        }
                  ],
                  "properties": {
                        "recordLabel": {
                              "$ref": "http://supermodel.io/schemaorg/properties/recordLabel"
                        },
                        "catalogNumber": {
                              "$ref": "http://supermodel.io/schemaorg/properties/catalogNumber"
                        },
                        "creditedTo": {
                              "$ref": "http://supermodel.io/schemaorg/properties/creditedTo"
                        },
                        "releaseOf": {
                              "$ref": "http://supermodel.io/schemaorg/properties/releaseOf"
                        },
                        "duration": {
                              "$ref": "http://supermodel.io/schemaorg/properties/duration"
                        },
                        "musicReleaseFormat": {
                              "$ref": "http://supermodel.io/schemaorg/properties/musicReleaseFormat"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/recordLabel": {
                  "$id": "http://supermodel.io/schemaorg/properties/recordLabel",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/recordLabel",
                  "title": "recordLabel",
                  "description": "The label that issued the release.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/catalogNumber": {
                  "$id": "http://supermodel.io/schemaorg/properties/catalogNumber",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/catalogNumber",
                  "title": "catalogNumber",
                  "description": "The catalog number for the release.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/creditedTo": {
                  "$id": "http://supermodel.io/schemaorg/properties/creditedTo",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/creditedTo",
                  "title": "creditedTo",
                  "description": "The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to \"Stefani Germanotta Band\", but by Lady Gaga.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/releaseOf": {
                  "$id": "http://supermodel.io/schemaorg/properties/releaseOf",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/releaseOf",
                  "title": "releaseOf",
                  "description": "The album this is a release of.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicAlbum"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/musicReleaseFormat": {
                  "$id": "http://supermodel.io/schemaorg/properties/musicReleaseFormat",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/musicReleaseFormat",
                  "title": "musicReleaseFormat",
                  "description": "Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicReleaseFormatType"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/MusicReleaseFormatType": {
                  "$id": "http://supermodel.io/schemaorg/MusicReleaseFormatType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MusicReleaseFormatType",
                  "title": "MusicReleaseFormatType",
                  "type": "string",
                  "description": "Format of this release (the type of recording media used, ie. compact disc, digital media, LP, etc.).",
                  "enum": [
                        "DigitalAudioTapeFormat",
                        "DigitalFormat",
                        "CDFormat",
                        "VinylFormat",
                        "CassetteFormat",
                        "LaserDiscFormat",
                        "DVDFormat"
                  ]
            },
            "http://supermodel.io/schemaorg/MusicPlaylist": {
                  "$id": "http://supermodel.io/schemaorg/MusicPlaylist",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MusicPlaylist",
                  "title": "MusicPlaylist",
                  "type": "object",
                  "description": "A collection of music tracks in playlist form.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "track": {
                              "$ref": "http://supermodel.io/schemaorg/properties/track"
                        },
                        "numTracks": {
                              "$ref": "http://supermodel.io/schemaorg/properties/numTracks"
                        },
                        "tracks": {
                              "$ref": "http://supermodel.io/schemaorg/properties/tracks"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/track": {
                  "$id": "http://supermodel.io/schemaorg/properties/track",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/track",
                  "title": "track",
                  "description": "A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicRecording"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/ItemList"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/MusicRecording": {
                  "$id": "http://supermodel.io/schemaorg/MusicRecording",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MusicRecording",
                  "title": "MusicRecording",
                  "type": "object",
                  "description": "A music recording (track), usually a single song.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "recordingOf": {
                              "$ref": "http://supermodel.io/schemaorg/properties/recordingOf"
                        },
                        "isrcCode": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isrcCode"
                        },
                        "inAlbum": {
                              "$ref": "http://supermodel.io/schemaorg/properties/inAlbum"
                        },
                        "inPlaylist": {
                              "$ref": "http://supermodel.io/schemaorg/properties/inPlaylist"
                        },
                        "byArtist": {
                              "$ref": "http://supermodel.io/schemaorg/properties/byArtist"
                        },
                        "duration": {
                              "$ref": "http://supermodel.io/schemaorg/properties/duration"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/recordingOf": {
                  "$id": "http://supermodel.io/schemaorg/properties/recordingOf",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/recordingOf",
                  "title": "recordingOf",
                  "description": "The composition this track is a recording of.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicComposition"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/MusicComposition": {
                  "$id": "http://supermodel.io/schemaorg/MusicComposition",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/MusicComposition",
                  "title": "MusicComposition",
                  "type": "object",
                  "description": "A musical composition.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "musicCompositionForm": {
                              "$ref": "http://supermodel.io/schemaorg/properties/musicCompositionForm"
                        },
                        "includedComposition": {
                              "$ref": "http://supermodel.io/schemaorg/properties/includedComposition"
                        },
                        "lyricist": {
                              "$ref": "http://supermodel.io/schemaorg/properties/lyricist"
                        },
                        "recordedAs": {
                              "$ref": "http://supermodel.io/schemaorg/properties/recordedAs"
                        },
                        "firstPerformance": {
                              "$ref": "http://supermodel.io/schemaorg/properties/firstPerformance"
                        },
                        "musicArrangement": {
                              "$ref": "http://supermodel.io/schemaorg/properties/musicArrangement"
                        },
                        "lyrics": {
                              "$ref": "http://supermodel.io/schemaorg/properties/lyrics"
                        },
                        "iswcCode": {
                              "$ref": "http://supermodel.io/schemaorg/properties/iswcCode"
                        },
                        "composer": {
                              "$ref": "http://supermodel.io/schemaorg/properties/composer"
                        },
                        "musicalKey": {
                              "$ref": "http://supermodel.io/schemaorg/properties/musicalKey"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/musicCompositionForm": {
                  "$id": "http://supermodel.io/schemaorg/properties/musicCompositionForm",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/musicCompositionForm",
                  "title": "musicCompositionForm",
                  "description": "The type of composition (e.g. overture, sonata, symphony, etc.).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/includedComposition": {
                  "$id": "http://supermodel.io/schemaorg/properties/includedComposition",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/includedComposition",
                  "title": "includedComposition",
                  "description": "Smaller compositions included in this work (e.g. a movement in a symphony).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicComposition"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/lyricist": {
                  "$id": "http://supermodel.io/schemaorg/properties/lyricist",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/lyricist",
                  "title": "lyricist",
                  "description": "The person who wrote the words.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/recordedAs": {
                  "$id": "http://supermodel.io/schemaorg/properties/recordedAs",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/recordedAs",
                  "title": "recordedAs",
                  "description": "An audio recording of the work.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicRecording"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/firstPerformance": {
                  "$id": "http://supermodel.io/schemaorg/properties/firstPerformance",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/firstPerformance",
                  "title": "firstPerformance",
                  "description": "The date and place the work was first performed.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Event"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/musicArrangement": {
                  "$id": "http://supermodel.io/schemaorg/properties/musicArrangement",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/musicArrangement",
                  "title": "musicArrangement",
                  "description": "An arrangement derived from the composition.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicComposition"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/lyrics": {
                  "$id": "http://supermodel.io/schemaorg/properties/lyrics",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/lyrics",
                  "title": "lyrics",
                  "description": "The words in the song.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/iswcCode": {
                  "$id": "http://supermodel.io/schemaorg/properties/iswcCode",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/iswcCode",
                  "title": "iswcCode",
                  "description": "The International Standard Musical Work Code for the composition.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/musicalKey": {
                  "$id": "http://supermodel.io/schemaorg/properties/musicalKey",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/musicalKey",
                  "title": "musicalKey",
                  "description": "The key, mode, or scale this composition uses.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isrcCode": {
                  "$id": "http://supermodel.io/schemaorg/properties/isrcCode",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isrcCode",
                  "title": "isrcCode",
                  "description": "The International Standard Recording Code for the recording.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/inAlbum": {
                  "$id": "http://supermodel.io/schemaorg/properties/inAlbum",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/inAlbum",
                  "title": "inAlbum",
                  "description": "The album to which this recording belongs.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicAlbum"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/inPlaylist": {
                  "$id": "http://supermodel.io/schemaorg/properties/inPlaylist",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/inPlaylist",
                  "title": "inPlaylist",
                  "description": "The playlist to which this recording belongs.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicPlaylist"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/numTracks": {
                  "$id": "http://supermodel.io/schemaorg/properties/numTracks",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/numTracks",
                  "title": "numTracks",
                  "description": "The number of tracks in this album or playlist.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/tracks": {
                  "$id": "http://supermodel.io/schemaorg/properties/tracks",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/tracks",
                  "title": "tracks",
                  "description": "A music recording (track)&#x2014;usually a single song.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicRecording"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/genre": {
                  "$id": "http://supermodel.io/schemaorg/properties/genre",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/genre",
                  "title": "genre",
                  "description": "Genre of the creative work, broadcast channel or group.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/musicGroupMember": {
                  "$id": "http://supermodel.io/schemaorg/properties/musicGroupMember",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/musicGroupMember",
                  "title": "musicGroupMember",
                  "description": "A member of a music group&#x2014;for example, John, Paul, George, or Ringo.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/album": {
                  "$id": "http://supermodel.io/schemaorg/properties/album",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/album",
                  "title": "album",
                  "description": "A music album.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MusicAlbum"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/PerformingGroup": {
                  "$id": "http://supermodel.io/schemaorg/PerformingGroup",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/PerformingGroup",
                  "title": "PerformingGroup",
                  "description": "A performance group, such as a band, an orchestra, or a circus.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/directors": {
                  "$id": "http://supermodel.io/schemaorg/properties/directors",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/directors",
                  "title": "directors",
                  "description": "A director of e.g. tv, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/videoQuality": {
                  "$id": "http://supermodel.io/schemaorg/properties/videoQuality",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/videoQuality",
                  "title": "videoQuality",
                  "description": "The quality of the video.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/actors": {
                  "$id": "http://supermodel.io/schemaorg/properties/actors",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/actors",
                  "title": "actors",
                  "description": "An actor, e.g. in tv, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/publication": {
                  "$id": "http://supermodel.io/schemaorg/properties/publication",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/publication",
                  "title": "publication",
                  "description": "A publication event associated with the item.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PublicationEvent"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/PublicationEvent": {
                  "$id": "http://supermodel.io/schemaorg/PublicationEvent",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/PublicationEvent",
                  "title": "PublicationEvent",
                  "type": "object",
                  "description": "A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Event"
                        }
                  ],
                  "properties": {
                        "publishedOn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/publishedOn"
                        },
                        "free": {
                              "$ref": "http://supermodel.io/schemaorg/properties/free"
                        },
                        "isAccessibleForFree": {
                              "$ref": "http://supermodel.io/schemaorg/properties/isAccessibleForFree"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/publishedOn": {
                  "$id": "http://supermodel.io/schemaorg/properties/publishedOn",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/publishedOn",
                  "title": "publishedOn",
                  "description": "A broadcast service associated with the publication event.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/BroadcastService"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/BroadcastService": {
                  "$id": "http://supermodel.io/schemaorg/BroadcastService",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/BroadcastService",
                  "title": "BroadcastService",
                  "type": "object",
                  "description": "A delivery service through which content is provided via broadcast over the air or online.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Service"
                        }
                  ],
                  "properties": {
                        "broadcastTimezone": {
                              "$ref": "http://supermodel.io/schemaorg/properties/broadcastTimezone"
                        },
                        "videoFormat": {
                              "$ref": "http://supermodel.io/schemaorg/properties/videoFormat"
                        },
                        "broadcastAffiliateOf": {
                              "$ref": "http://supermodel.io/schemaorg/properties/broadcastAffiliateOf"
                        },
                        "parentService": {
                              "$ref": "http://supermodel.io/schemaorg/properties/parentService"
                        },
                        "broadcastDisplayName": {
                              "$ref": "http://supermodel.io/schemaorg/properties/broadcastDisplayName"
                        },
                        "area": {
                              "$ref": "http://supermodel.io/schemaorg/properties/area"
                        },
                        "broadcaster": {
                              "$ref": "http://supermodel.io/schemaorg/properties/broadcaster"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/broadcastTimezone": {
                  "$id": "http://supermodel.io/schemaorg/properties/broadcastTimezone",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/broadcastTimezone",
                  "title": "broadcastTimezone",
                  "description": "The timezone in <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601 format</a> for which the service bases its broadcasts",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/videoFormat": {
                  "$id": "http://supermodel.io/schemaorg/properties/videoFormat",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/videoFormat",
                  "title": "videoFormat",
                  "description": "The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/broadcastAffiliateOf": {
                  "$id": "http://supermodel.io/schemaorg/properties/broadcastAffiliateOf",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/broadcastAffiliateOf",
                  "title": "broadcastAffiliateOf",
                  "description": "The media network(s) whose content is broadcast on this station.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/parentService": {
                  "$id": "http://supermodel.io/schemaorg/properties/parentService",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/parentService",
                  "title": "parentService",
                  "description": "A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/BroadcastService"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/broadcastDisplayName": {
                  "$id": "http://supermodel.io/schemaorg/properties/broadcastDisplayName",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/broadcastDisplayName",
                  "title": "broadcastDisplayName",
                  "description": "The name displayed in the channel guide. For many US affiliates, it is the network name.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/area": {
                  "$id": "http://supermodel.io/schemaorg/properties/area",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/area",
                  "title": "area",
                  "description": "The area within which users can expect to reach the broadcast service.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/broadcaster": {
                  "$id": "http://supermodel.io/schemaorg/properties/broadcaster",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/broadcaster",
                  "title": "broadcaster",
                  "description": "The organization owning or operating the broadcast service.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/free": {
                  "$id": "http://supermodel.io/schemaorg/properties/free",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/free",
                  "title": "free",
                  "description": "A flag to signal that the item, event, or place is accessible for free.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Boolean"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/text": {
                  "$id": "http://supermodel.io/schemaorg/properties/text",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/text",
                  "title": "text",
                  "description": "The textual content of this CreativeWork.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/expires": {
                  "$id": "http://supermodel.io/schemaorg/properties/expires",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/expires",
                  "title": "expires",
                  "description": "Date the content expires and is no longer useful or available. For example a <a class=\"localLink\" href=\"http://schema.org/VideoObject\">VideoObject</a> or <a class=\"localLink\" href=\"http://schema.org/NewsArticle\">NewsArticle</a> whose availability or relevance is time-limited, or a <a class=\"localLink\" href=\"http://schema.org/ClaimReview\">ClaimReview</a> fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/publisher": {
                  "$id": "http://supermodel.io/schemaorg/properties/publisher",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/publisher",
                  "title": "publisher",
                  "description": "The publisher of the creative work.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/releasedEvent": {
                  "$id": "http://supermodel.io/schemaorg/properties/releasedEvent",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/releasedEvent",
                  "title": "releasedEvent",
                  "description": "The place and time the release was issued, expressed as a PublicationEvent.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/PublicationEvent"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/educationalUse": {
                  "$id": "http://supermodel.io/schemaorg/properties/educationalUse",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/educationalUse",
                  "title": "educationalUse",
                  "description": "The purpose of a work in the context of education; for example, 'assignment', 'group work'.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/contentLocation": {
                  "$id": "http://supermodel.io/schemaorg/properties/contentLocation",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/contentLocation",
                  "title": "contentLocation",
                  "description": "The location depicted or described in the content. For example, the location in a photograph or painting.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/schemaVersion": {
                  "$id": "http://supermodel.io/schemaorg/properties/schemaVersion",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/schemaVersion",
                  "title": "schemaVersion",
                  "description": "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/accessibilityFeature": {
                  "$id": "http://supermodel.io/schemaorg/properties/accessibilityFeature",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/accessibilityFeature",
                  "title": "accessibilityFeature",
                  "description": "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/locationCreated": {
                  "$id": "http://supermodel.io/schemaorg/properties/locationCreated",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/locationCreated",
                  "title": "locationCreated",
                  "description": "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/accessModeSufficient": {
                  "$id": "http://supermodel.io/schemaorg/properties/accessModeSufficient",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/accessModeSufficient",
                  "title": "accessModeSufficient",
                  "description": "A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include:  auditory, tactile, textual, visual.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/temporalCoverage": {
                  "$id": "http://supermodel.io/schemaorg/properties/temporalCoverage",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/temporalCoverage",
                  "title": "temporalCoverage",
                  "description": "The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in <a href=\"https://en.wikipedia.org/wiki/ISO_8601#Time_intervals\">ISO 8601 time interval format</a>. In\n      the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \"2011/2012\"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.\n      Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \"1939/1945\".",
                  "anyOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/accountablePerson": {
                  "$id": "http://supermodel.io/schemaorg/properties/accountablePerson",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/accountablePerson",
                  "title": "accountablePerson",
                  "description": "Specifies the Person that is legally accountable for the CreativeWork.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/spatialCoverage": {
                  "$id": "http://supermodel.io/schemaorg/properties/spatialCoverage",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/spatialCoverage",
                  "title": "spatialCoverage",
                  "description": "The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of\n      contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates\n      areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/editor": {
                  "$id": "http://supermodel.io/schemaorg/properties/editor",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/editor",
                  "title": "editor",
                  "description": "Specifies the Person who edited the CreativeWork.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/discussionUrl": {
                  "$id": "http://supermodel.io/schemaorg/properties/discussionUrl",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/discussionUrl",
                  "title": "discussionUrl",
                  "description": "A link to the page containing the comments of the CreativeWork.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/copyrightHolder": {
                  "$id": "http://supermodel.io/schemaorg/properties/copyrightHolder",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/copyrightHolder",
                  "title": "copyrightHolder",
                  "description": "The party holding the legal copyright to the CreativeWork.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/accessibilityHazard": {
                  "$id": "http://supermodel.io/schemaorg/properties/accessibilityHazard",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/accessibilityHazard",
                  "title": "accessibilityHazard",
                  "description": "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/copyrightYear": {
                  "$id": "http://supermodel.io/schemaorg/properties/copyrightYear",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/copyrightYear",
                  "title": "copyrightYear",
                  "description": "The year during which the claimed copyright for the CreativeWork was first asserted.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/recordedAt": {
                  "$id": "http://supermodel.io/schemaorg/properties/recordedAt",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/recordedAt",
                  "title": "recordedAt",
                  "description": "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Event"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/commentCount": {
                  "$id": "http://supermodel.io/schemaorg/properties/commentCount",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/commentCount",
                  "title": "commentCount",
                  "description": "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/fileFormat": {
                  "$id": "http://supermodel.io/schemaorg/properties/fileFormat",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/fileFormat",
                  "title": "fileFormat",
                  "description": "Media type, typically MIME format (see <a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">IANA site</a>) of the content e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/accessibilityAPI": {
                  "$id": "http://supermodel.io/schemaorg/properties/accessibilityAPI",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/accessibilityAPI",
                  "title": "accessibilityAPI",
                  "description": "Indicates that the resource is compatible with the referenced accessibility API (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/interactionStatistic": {
                  "$id": "http://supermodel.io/schemaorg/properties/interactionStatistic",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/interactionStatistic",
                  "title": "interactionStatistic",
                  "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/InteractionCounter"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/InteractionCounter": {
                  "$id": "http://supermodel.io/schemaorg/InteractionCounter",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/InteractionCounter",
                  "title": "InteractionCounter",
                  "type": "object",
                  "description": "A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/StructuredValue"
                        }
                  ],
                  "properties": {
                        "interactionService": {
                              "$ref": "http://supermodel.io/schemaorg/properties/interactionService"
                        },
                        "userInteractionCount": {
                              "$ref": "http://supermodel.io/schemaorg/properties/userInteractionCount"
                        },
                        "interactionType": {
                              "$ref": "http://supermodel.io/schemaorg/properties/interactionType"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/interactionService": {
                  "$id": "http://supermodel.io/schemaorg/properties/interactionService",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/interactionService",
                  "title": "interactionService",
                  "description": "The WebSite or SoftwareApplication where the interactions took place.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/WebSite"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/SoftwareApplication"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/WebSite": {
                  "$id": "http://supermodel.io/schemaorg/WebSite",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/WebSite",
                  "title": "WebSite",
                  "type": "object",
                  "description": "A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "issn": {
                              "$ref": "http://supermodel.io/schemaorg/properties/issn"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/issn": {
                  "$id": "http://supermodel.io/schemaorg/properties/issn",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/issn",
                  "title": "issn",
                  "description": "The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/userInteractionCount": {
                  "$id": "http://supermodel.io/schemaorg/properties/userInteractionCount",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/userInteractionCount",
                  "title": "userInteractionCount",
                  "description": "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/interactionType": {
                  "$id": "http://supermodel.io/schemaorg/properties/interactionType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/interactionType",
                  "title": "interactionType",
                  "description": "The Action representing the type of interaction. For up votes, +1s, etc. use <a class=\"localLink\" href=\"http://schema.org/LikeAction\">LikeAction</a>. For down votes use <a class=\"localLink\" href=\"http://schema.org/DislikeAction\">DislikeAction</a>. Otherwise, use the most specific Action.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Action"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/contentRating": {
                  "$id": "http://supermodel.io/schemaorg/properties/contentRating",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/contentRating",
                  "title": "contentRating",
                  "description": "Official rating of a piece of content&#x2014;for example,'MPAA PG-13'.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Rating"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/learningResourceType": {
                  "$id": "http://supermodel.io/schemaorg/properties/learningResourceType",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/learningResourceType",
                  "title": "learningResourceType",
                  "description": "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/accessMode": {
                  "$id": "http://supermodel.io/schemaorg/properties/accessMode",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/accessMode",
                  "title": "accessMode",
                  "description": "The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include: auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isFamilyFriendly": {
                  "$id": "http://supermodel.io/schemaorg/properties/isFamilyFriendly",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isFamilyFriendly",
                  "title": "isFamilyFriendly",
                  "description": "Indicates whether this content is family friendly.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Boolean"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/version": {
                  "$id": "http://supermodel.io/schemaorg/properties/version",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/version",
                  "title": "version",
                  "description": "The version of the CreativeWork embodied by a specified resource.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Number"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/keywords": {
                  "$id": "http://supermodel.io/schemaorg/properties/keywords",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/keywords",
                  "title": "keywords",
                  "description": "Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/exampleOfWork": {
                  "$id": "http://supermodel.io/schemaorg/properties/exampleOfWork",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/exampleOfWork",
                  "title": "exampleOfWork",
                  "description": "A creative work that this work is an example/instance/realization/derivation of.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/mainEntity": {
                  "$id": "http://supermodel.io/schemaorg/properties/mainEntity",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/mainEntity",
                  "title": "mainEntity",
                  "description": "Indicates the primary entity described in some page or other CreativeWork.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/encodings": {
                  "$id": "http://supermodel.io/schemaorg/properties/encodings",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/encodings",
                  "title": "encodings",
                  "description": "A media object that encodes this CreativeWork.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MediaObject"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isBasedOnUrl": {
                  "$id": "http://supermodel.io/schemaorg/properties/isBasedOnUrl",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isBasedOnUrl",
                  "title": "isBasedOnUrl",
                  "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/alternativeHeadline": {
                  "$id": "http://supermodel.io/schemaorg/properties/alternativeHeadline",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/alternativeHeadline",
                  "title": "alternativeHeadline",
                  "description": "A secondary title of the CreativeWork.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/timeRequired": {
                  "$id": "http://supermodel.io/schemaorg/properties/timeRequired",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/timeRequired",
                  "title": "timeRequired",
                  "description": "Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Duration"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/thumbnailUrl": {
                  "$id": "http://supermodel.io/schemaorg/properties/thumbnailUrl",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/thumbnailUrl",
                  "title": "thumbnailUrl",
                  "description": "A thumbnail image relevant to the Thing.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/hasPart": {
                  "$id": "http://supermodel.io/schemaorg/properties/hasPart",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/hasPart",
                  "title": "hasPart",
                  "description": "Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/comment": {
                  "$id": "http://supermodel.io/schemaorg/properties/comment",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/comment",
                  "title": "comment",
                  "description": "Comments, typically from users.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Comment"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Comment": {
                  "$id": "http://supermodel.io/schemaorg/Comment",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Comment",
                  "title": "Comment",
                  "type": "object",
                  "description": "A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the <a class=\"localLink\" href=\"http://schema.org/text\">text</a> property, and its topic via <a class=\"localLink\" href=\"http://schema.org/about\">about</a>, properties shared with all CreativeWorks.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "upvoteCount": {
                              "$ref": "http://supermodel.io/schemaorg/properties/upvoteCount"
                        },
                        "parentItem": {
                              "$ref": "http://supermodel.io/schemaorg/properties/parentItem"
                        },
                        "downvoteCount": {
                              "$ref": "http://supermodel.io/schemaorg/properties/downvoteCount"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/upvoteCount": {
                  "$id": "http://supermodel.io/schemaorg/properties/upvoteCount",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/upvoteCount",
                  "title": "upvoteCount",
                  "description": "The number of upvotes this question, answer or comment has received from the community.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/parentItem": {
                  "$id": "http://supermodel.io/schemaorg/properties/parentItem",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/parentItem",
                  "title": "parentItem",
                  "description": "The parent of a question, answer or item in general.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Question"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Question": {
                  "$id": "http://supermodel.io/schemaorg/Question",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Question",
                  "title": "Question",
                  "type": "object",
                  "description": "A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ],
                  "properties": {
                        "upvoteCount": {
                              "$ref": "http://supermodel.io/schemaorg/properties/upvoteCount"
                        },
                        "answerCount": {
                              "$ref": "http://supermodel.io/schemaorg/properties/answerCount"
                        },
                        "acceptedAnswer": {
                              "$ref": "http://supermodel.io/schemaorg/properties/acceptedAnswer"
                        },
                        "suggestedAnswer": {
                              "$ref": "http://supermodel.io/schemaorg/properties/suggestedAnswer"
                        },
                        "downvoteCount": {
                              "$ref": "http://supermodel.io/schemaorg/properties/downvoteCount"
                        }
                  }
            },
            "http://supermodel.io/schemaorg/properties/answerCount": {
                  "$id": "http://supermodel.io/schemaorg/properties/answerCount",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/answerCount",
                  "title": "answerCount",
                  "description": "The number of answers this question has received.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/acceptedAnswer": {
                  "$id": "http://supermodel.io/schemaorg/properties/acceptedAnswer",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/acceptedAnswer",
                  "title": "acceptedAnswer",
                  "description": "The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ItemList"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Answer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/Answer": {
                  "$id": "http://supermodel.io/schemaorg/Answer",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/Answer",
                  "title": "Answer",
                  "description": "An answer offered to a question; perhaps correct, perhaps opinionated or wrong.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Comment"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/suggestedAnswer": {
                  "$id": "http://supermodel.io/schemaorg/properties/suggestedAnswer",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/suggestedAnswer",
                  "title": "suggestedAnswer",
                  "description": "An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/ItemList"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Answer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/downvoteCount": {
                  "$id": "http://supermodel.io/schemaorg/properties/downvoteCount",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/downvoteCount",
                  "title": "downvoteCount",
                  "description": "The number of downvotes this question, answer or comment has received from the community.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Integer"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/license": {
                  "$id": "http://supermodel.io/schemaorg/properties/license",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/license",
                  "title": "license",
                  "description": "A license document that applies to this content, typically indicated by URL.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/accessibilityControl": {
                  "$id": "http://supermodel.io/schemaorg/properties/accessibilityControl",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/accessibilityControl",
                  "title": "accessibilityControl",
                  "description": "Identifies input methods that are sufficient to fully control the described resource (<a href=\"http://www.w3.org/wiki/WebSchemas/Accessibility\">WebSchemas wiki lists possible values</a>).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/isBasedOn": {
                  "$id": "http://supermodel.io/schemaorg/properties/isBasedOn",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/isBasedOn",
                  "title": "isBasedOn",
                  "description": "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Product"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/URL"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/creator": {
                  "$id": "http://supermodel.io/schemaorg/properties/creator",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/creator",
                  "title": "creator",
                  "description": "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.",
                  "anyOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/producer": {
                  "$id": "http://supermodel.io/schemaorg/properties/producer",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/producer",
                  "title": "producer",
                  "description": "The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Person"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/Organization"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/mentions": {
                  "$id": "http://supermodel.io/schemaorg/properties/mentions",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/mentions",
                  "title": "mentions",
                  "description": "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Thing"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/datePublished": {
                  "$id": "http://supermodel.io/schemaorg/properties/datePublished",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/datePublished",
                  "title": "datePublished",
                  "description": "Date of first broadcast/publication.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Date"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/headline": {
                  "$id": "http://supermodel.io/schemaorg/properties/headline",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/headline",
                  "title": "headline",
                  "description": "Headline of the article.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/citation": {
                  "$id": "http://supermodel.io/schemaorg/properties/citation",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/citation",
                  "title": "citation",
                  "description": "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Text"
                        },
                        {
                              "$ref": "http://supermodel.io/schemaorg/CreativeWork"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/datasetTimeInterval": {
                  "$id": "http://supermodel.io/schemaorg/properties/datasetTimeInterval",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/datasetTimeInterval",
                  "title": "datasetTimeInterval",
                  "description": "The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/spatial": {
                  "$id": "http://supermodel.io/schemaorg/properties/spatial",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/spatial",
                  "title": "spatial",
                  "description": "The range of spatial applicability of a dataset, e.g. for a dataset of New York weather, the state of New York.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/Place"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/temporal": {
                  "$id": "http://supermodel.io/schemaorg/properties/temporal",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/temporal",
                  "title": "temporal",
                  "description": "The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DateTime"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/catalog": {
                  "$id": "http://supermodel.io/schemaorg/properties/catalog",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/catalog",
                  "title": "catalog",
                  "description": "A data catalog which contains this dataset.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataCatalog"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/includedDataCatalog": {
                  "$id": "http://supermodel.io/schemaorg/properties/includedDataCatalog",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/includedDataCatalog",
                  "title": "includedDataCatalog",
                  "description": "A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataCatalog"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/properties/distribution": {
                  "$id": "http://supermodel.io/schemaorg/properties/distribution",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/distribution",
                  "title": "distribution",
                  "description": "A downloadable form of this dataset, at a specific location, in a specific format.",
                  "oneOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/DataDownload"
                        }
                  ]
            },
            "http://supermodel.io/schemaorg/DataDownload": {
                  "$id": "http://supermodel.io/schemaorg/DataDownload",
                  "$schema": "http://json-schema.org/draft-07/schema#",
                  "$source": "http://schema.org/DataDownload",
                  "title": "DataDownload",
                  "description": "A dataset in downloadable form.",
                  "allOf": [
                        {
                              "$ref": "http://supermodel.io/schemaorg/MediaObject"
                        }
                  ]
            }
      }
}