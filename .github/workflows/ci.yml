name: Pytest

on:
  push:
    branches: [dev, main]
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  check_json:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check JSON
        run: |
          file_path="available.json"
          if [ -f "$file_path" ]; then
            if jq . "$file_path" >/dev/null 2>&1; then
              echo "JSON file is valid."
            else
              echo "JSON file is not valid."
              exit 1
            fi
          else
            echo "JSON file does not exist."
            exit 1
          fi

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install schema module
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools
          python -m pip install -e .
          python -m pip install -r requirements.txt

      - name: Run pytest
        run: |
          cd hdr_schemata/tests/
          pytest test_gwdm.py
          pytest test_hdruk.py
          pytest test_schemaOrg.py

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Trigger CI workflow in the traser repository
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: ci.yaml
          repo: HDRUK/traser
          ref: |-
            ${{
              github.ref_name == 'dev' && 'dev'
            || github.base_ref == 'dev' && 'dev'
            ||                             'main'
            }}
          inputs: |
            {
              "schemata_branch": "${{ steps.extract_branch.outputs.branch }}"
            }
          token: ${{ secrets.GH_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - run: pip3 install -r requirements.txt
      - name: deploy
        run: |
          mkdocs gh-deploy --force
